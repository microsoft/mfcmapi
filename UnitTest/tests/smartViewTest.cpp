// AUTOGENERATED FILE. DO NOT MODIFY.
#include <UnitTest/stdafx.h>
#include <UnitTest/UnitTest.h>
#include <UnitTest/res/SmartViewTests.h>

namespace SmartViewTest
{
#define TEST(PARSERTYPE, NAME, NUM) \
	TEST_METHOD(SV##NAME##PARSERTYPE##_##NUM) { unittest::test(static_cast<parserType>(##PARSERTYPE), IDR_SV##NAME##NUM##IN, IDR_SV##NAME##NUM##OUT); }

	TEST_CLASS(SmartViewTest)
	{
	private:
		// Without this, clang gets weird
		static const bool dummy_var = true;

	public:
		TEST_CLASS_INITIALIZE(initialize) { unittest::init(); }

		TEST_METHOD(SmartViewAddInTest1)
		{
			unittest::test(
				std::wstring(L"SmartViewAddInTest1"),
				parserType::END,
				std::vector<BYTE>{1, 2, 3, 4},
				std::wstring(L"Unknown Parser 39\r\n"
							 L"\tcb: 4 lpb: 01020304"));
		}

	TEST(1, 1AEI, 1)
	TEST(1, 1AEI, 2)
	TEST(1, 1AEI, 3)
	TEST(1, 1AEI, 4)
	TEST(10, 10FE, 1)
	TEST(10, 10FE, 2)
	TEST(10, 10FE, 3)
	TEST(11, 11FUF, 1)
	TEST(11, 11FUF, 2)
	TEST(11, 11FUF, 3)
	TEST(11, 11FUF, 4)
	TEST(11, 11FUF, 5)
	TEST(12, 12GOID, 1)
	TEST(12, 12GOID, 2)
	TEST(13, 13PROP, 1)
	TEST(13, 13PROP, 2)
	TEST(13, 13PROP, 3)
	TEST(13, 13PROP, 4)
	TEST(13, 13PROP, 5)
	TEST(13, 13PROP, 6)
	TEST(13, 13PROP, 7)
	TEST(13, 13PROP, 8)
	TEST(14, 14PROPDEF, 1)
	TEST(14, 14PROPDEF, 2)
	TEST(14, 14PROPDEF, 3)
	TEST(14, 14PROPDEF, 4)
	TEST(14, 14PROPDEF, 5)
	TEST(14, 14PROPDEF, 6)
	TEST(14, 14PROPDEF, 7)
	TEST(14, 14PROPDEF, 8)
	TEST(15, 15RECIPROW, 1)
	TEST(15, 15RECIPROW, 2)
	TEST(16, 16RP, 1)
	TEST(16, 16RP, 2)
	TEST(16, 16RP, 3)
	TEST(17, 17REPORTTAG, 1)
	TEST(18, 18RES, 1)
	TEST(18, 18RES, 2)
	TEST(18, 18RES, 3)
	TEST(18, 18RES, 4)
	TEST(19, 19RULECON, 1)
	TEST(19, 19RULECON, 2)
	TEST(19, 19RULECON, 3)
	TEST(19, 19RULECON, 4)
	TEST(2, 2ARP, 1)
	TEST(2, 2ARP, 2)
	TEST(2, 2ARP, 3)
	TEST(2, 2ARP, 4)
	TEST(20, 20SF, 1)
	TEST(20, 20SF, 2)
	TEST(20, 20SF, 3)
	TEST(20, 20SF, 4)
	TEST(20, 20SF, 5)
	TEST(20, 20SF, 6)
	TEST(20, 20SF, 7)
	TEST(21, 21SD, 1)
	TEST(21, 21SD, 2)
	TEST(21, 21SD, 3)
	TEST(21, 21SD, 4)
	TEST(22, 22SID, 1)
	TEST(22, 22SID, 2)
	TEST(22, 22SID, 3)
	TEST(22, 22SID, 4)
	TEST(22, 22SID, 5)
	TEST(23, 23TA, 1)
	TEST(24, 24TZ, 1)
	TEST(25, 25TZD, 1)
	TEST(25, 25TZD, 2)
	TEST(25, 25TZD, 3)
	TEST(26, 26WEBVIEW, 1)
	TEST(26, 26WEBVIEW, 2)
	TEST(26, 26WEBVIEW, 3)
	TEST(26, 26WEBVIEW, 4)
	TEST(26, 26WEBVIEW, 5)
	TEST(26, 26WEBVIEW, 6)
	TEST(26, 26WEBVIEW, 7)
	TEST(27, 27NICKNAME, 2)
	TEST(27, 27NICKNAME, 3)
	TEST(27, 27NICKNAME, 4)
	TEST(28, 28VERBSTREAM, 1)
	TEST(28, 28VERBSTREAM, 2)
	TEST(28, 28VERBSTREAM, 3)
	TEST(28, 28VERBSTREAM, 4)
	TEST(28, 28VERBSTREAM, 5)
	TEST(28, 28VERBSTREAM, 6)
	TEST(28, 28VERBSTREAM, 7)
	TEST(29, 29TOMBSTONE, 1)
	TEST(29, 29TOMBSTONE, 2)
	TEST(29, 29TOMBSTONE, 3)
	TEST(3, 3CI, 1)
	TEST(3, 3CI, 2)
	TEST(3, 3CI, 3)
	TEST(3, 3CI, 4)
	TEST(30, 30PCL, 1)
	TEST(30, 30PCL, 2)
	TEST(30, 30PCL, 3)
	TEST(31, 31FREEBUSYSID, 1)
	TEST(31, 31FREEBUSYSID, 2)
	TEST(32, 32XID, 1)
	TEST(32, 32XID, 2)
	TEST(32, 32XID, 3)
	TEST(32, 32XID, 4)
	TEST(34, 34EXRULEACTION, 1)
	TEST(34, 34EXRULEACTION, 2)
	TEST(34, 34EXRULEACTION, 3)
	TEST(38, 38SWAPTODO, 1)
	TEST(38, 38SWAPTODO, 2)
	TEST(4, 4EIDDECODE, 1)
	TEST(5, 5EIDENCODE, 1)
	TEST(6, 6EID, 1)
	TEST(6, 6EID, 10)
	TEST(6, 6EID, 11)
	TEST(6, 6EID, 12)
	TEST(6, 6EID, 13)
	TEST(6, 6EID, 14)
	TEST(6, 6EID, 15)
	TEST(6, 6EID, 16)
	TEST(6, 6EID, 17)
	TEST(6, 6EID, 18)
	TEST(6, 6EID, 19)
	TEST(6, 6EID, 2)
	TEST(6, 6EID, 20)
	TEST(6, 6EID, 21)
	TEST(6, 6EID, 22)
	TEST(6, 6EID, 23)
	TEST(6, 6EID, 24)
	TEST(6, 6EID, 25)
	TEST(6, 6EID, 26)
	TEST(6, 6EID, 27)
	TEST(6, 6EID, 28)
	TEST(6, 6EID, 29)
	TEST(6, 6EID, 3)
	TEST(6, 6EID, 30)
	TEST(6, 6EID, 31)
	TEST(6, 6EID, 32)
	TEST(6, 6EID, 33)
	TEST(6, 6EID, 34)
	TEST(6, 6EID, 35)
	TEST(6, 6EID, 36)
	TEST(6, 6EID, 37)
	TEST(6, 6EID, 38)
	TEST(6, 6EID, 39)
	TEST(6, 6EID, 4)
	TEST(6, 6EID, 40)
	TEST(6, 6EID, 5)
	TEST(6, 6EID, 6)
	TEST(6, 6EID, 7)
	TEST(6, 6EID, 8)
	TEST(6, 6EID, 9)
	TEST(7, 7EL, 1)
	TEST(7, 7EL, 2)
	TEST(8, 8EFF, 1)
	TEST(8, 8EFF, 2)
	TEST(9, 9EXRULE, 1)
	TEST(9, 9EXRULE, 2)
	TEST(9, 9EXRULE, 3)
	TEST(9, 9EXRULE, 4)
	};
} // namespace SmartViewTest
