// flags.h: where our flag parsing array is defined

#include <MAPIHook.h>
#include "ExtraPropTags.h"

//when listing flagVALUE entries, NULL values need to come first
FLAG_ARRAY_ENTRY g_FlagArray[] =
{
	FLAG_ENTRY(PR_ACCESS,MAPI_ACCESS_MODIFY,flagFLAG)
	FLAG_ENTRY(PR_ACCESS,MAPI_ACCESS_READ,flagFLAG)
	FLAG_ENTRY(PR_ACCESS,MAPI_ACCESS_DELETE,flagFLAG)
	FLAG_ENTRY(PR_ACCESS,MAPI_ACCESS_CREATE_HIERARCHY,flagFLAG)
	FLAG_ENTRY(PR_ACCESS,MAPI_ACCESS_CREATE_CONTENTS,flagFLAG)
	FLAG_ENTRY(PR_ACCESS,MAPI_ACCESS_CREATE_ASSOCIATED,flagFLAG)

	FLAG_ENTRY(PR_ACCESS_LEVEL,MAPI_MODIFY,flagFLAG)

	FLAG_ENTRY(PR_ANTIVIRUS_SCAN_STATUS,ANTIVIRUS_SCAN_NO_VIRUS,flagVALUE)//NULL value
	FLAG_ENTRY(PR_ANTIVIRUS_SCAN_STATUS,ANTIVIRUS_SCAN_VIRUS_PRESENT,flagFLAG)
	FLAG_ENTRY(PR_ANTIVIRUS_SCAN_STATUS,ANTIVIRUS_SCAN_VIRUS_CLEANED,flagFLAG)
	FLAG_ENTRY(PR_ANTIVIRUS_SCAN_STATUS,ANTIVIRUS_SCAN_VIRUS_DELETED,flagFLAG)

	FLAG_ENTRY(PR_ATTACH_FLAGS,ATT_INVISIBLE_IN_HTML,flagFLAG)
	FLAG_ENTRY(PR_ATTACH_FLAGS,ATT_INVISIBLE_IN_RTF,flagFLAG)
	FLAG_ENTRY(PR_ATTACH_FLAGS,ATT_MHTML_REF,flagFLAG)

	FLAG_ENTRY(PR_ATTACH_METHOD,NO_ATTACHMENT,flagVALUE)//NULL value
	FLAG_ENTRY(PR_ATTACH_METHOD,ATTACH_BY_VALUE,flagVALUE)
	FLAG_ENTRY(PR_ATTACH_METHOD,ATTACH_BY_REFERENCE,flagVALUE)
	FLAG_ENTRY(PR_ATTACH_METHOD,ATTACH_BY_REF_RESOLVE,flagVALUE)
	FLAG_ENTRY(PR_ATTACH_METHOD,ATTACH_BY_REF_ONLY,flagVALUE)
	FLAG_ENTRY(PR_ATTACH_METHOD,ATTACH_EMBEDDED_MSG,flagVALUE)
	FLAG_ENTRY(PR_ATTACH_METHOD,ATTACH_OLE,flagVALUE)

	FLAG_ENTRY(PR_AUTO_RESPONSE_SUPPRESS,AUTO_RESPONSE_SUPPRESS_DR,flagFLAG)
	FLAG_ENTRY(PR_AUTO_RESPONSE_SUPPRESS,AUTO_RESPONSE_SUPPRESS_RN,flagFLAG)
	FLAG_ENTRY(PR_AUTO_RESPONSE_SUPPRESS,AUTO_RESPONSE_SUPPRESS_NRN,flagFLAG)
	FLAG_ENTRY(PR_AUTO_RESPONSE_SUPPRESS,AUTO_RESPONSE_SUPPRESS_OOF,flagFLAG)
	FLAG_ENTRY(PR_AUTO_RESPONSE_SUPPRESS,AUTO_RESPONSE_SUPPRESS_AUTO_REPLY,flagFLAG)
	FLAG_ENTRY(PR_AUTO_RESPONSE_SUPPRESS,AUTO_RESPONSE_SUPPRESS_NORFC821FROM,flagFLAG)

	FLAG_ENTRY(PR_CONTAINER_FLAGS,AB_RECIPIENTS,flagFLAG)
	FLAG_ENTRY(PR_CONTAINER_FLAGS,AB_SUBCONTAINERS,flagFLAG)
	FLAG_ENTRY(PR_CONTAINER_FLAGS,AB_MODIFIABLE,flagFLAG)
	FLAG_ENTRY(PR_CONTAINER_FLAGS,AB_UNMODIFIABLE,flagFLAG)
	FLAG_ENTRY(PR_CONTAINER_FLAGS,AB_FIND_ON_OPEN,flagFLAG)
	FLAG_ENTRY(PR_CONTAINER_FLAGS,AB_NOT_DEFAULT,flagFLAG)

	FLAG_ENTRY(PR_CONTROL_FLAGS,DT_MULTILINE,flagFLAG)
	FLAG_ENTRY(PR_CONTROL_FLAGS,DT_EDITABLE,flagFLAG)
	FLAG_ENTRY(PR_CONTROL_FLAGS,DT_REQUIRED,flagFLAG)
	FLAG_ENTRY(PR_CONTROL_FLAGS,DT_SET_IMMEDIATE,flagFLAG)
	FLAG_ENTRY(PR_CONTROL_FLAGS,DT_PASSWORD_EDIT,flagFLAG)
	FLAG_ENTRY(PR_CONTROL_FLAGS,DT_ACCEPT_DBCS,flagFLAG)
	FLAG_ENTRY(PR_CONTROL_FLAGS,DT_SET_SELECTION,flagFLAG)

	FLAG_ENTRY(PR_CONTROL_TYPE,DTCT_LABEL,flagVALUE)//NULL value
	FLAG_ENTRY(PR_CONTROL_TYPE,DTCT_EDIT,flagVALUE)
	FLAG_ENTRY(PR_CONTROL_TYPE,DTCT_LBX,flagVALUE)
	FLAG_ENTRY(PR_CONTROL_TYPE,DTCT_COMBOBOX,flagVALUE)
	FLAG_ENTRY(PR_CONTROL_TYPE,DTCT_DDLBX,flagVALUE)
	FLAG_ENTRY(PR_CONTROL_TYPE,DTCT_CHECKBOX,flagVALUE)
	FLAG_ENTRY(PR_CONTROL_TYPE,DTCT_GROUPBOX,flagVALUE)
	FLAG_ENTRY(PR_CONTROL_TYPE,DTCT_BUTTON,flagVALUE)
	FLAG_ENTRY(PR_CONTROL_TYPE,DTCT_PAGE,flagVALUE)
	FLAG_ENTRY(PR_CONTROL_TYPE,DTCT_RADIOBUTTON,flagVALUE)
	FLAG_ENTRY(PR_CONTROL_TYPE,DTCT_MVLISTBOX,flagVALUE)
	FLAG_ENTRY(PR_CONTROL_TYPE,DTCT_MVDDLBX,flagVALUE)

	FLAG_ENTRY(PR_DELIVERY_POINT,MAPI_MH_DP_PUBLIC_UA,flagVALUE)//NULL value
	FLAG_ENTRY(PR_DELIVERY_POINT,MAPI_MH_DP_PRIVATE_UA,flagVALUE)
	FLAG_ENTRY(PR_DELIVERY_POINT,MAPI_MH_DP_MS,flagVALUE)
	FLAG_ENTRY(PR_DELIVERY_POINT,MAPI_MH_DP_ML,flagVALUE)
	FLAG_ENTRY(PR_DELIVERY_POINT,MAPI_MH_DP_PDAU,flagVALUE)
	FLAG_ENTRY(PR_DELIVERY_POINT,MAPI_MH_DP_PDS_PATRON,flagVALUE)
	FLAG_ENTRY(PR_DELIVERY_POINT,MAPI_MH_DP_OTHER_AU,flagVALUE)

	FLAG_ENTRY(PR_DISPLAY_TYPE,DT_MAILUSER,flagVALUE)//NULL value
	FLAG_ENTRY(PR_DISPLAY_TYPE,DT_DISTLIST,flagVALUE)
	FLAG_ENTRY(PR_DISPLAY_TYPE,DT_FORUM,flagVALUE)
	FLAG_ENTRY(PR_DISPLAY_TYPE,DT_AGENT,flagVALUE)
	FLAG_ENTRY(PR_DISPLAY_TYPE,DT_ORGANIZATION,flagVALUE)
	FLAG_ENTRY(PR_DISPLAY_TYPE,DT_PRIVATE_DISTLIST,flagVALUE)
	FLAG_ENTRY(PR_DISPLAY_TYPE,DT_REMOTE_MAILUSER,flagVALUE)
	FLAG_ENTRY(PR_DISPLAY_TYPE,DT_ROOM,flagVALUE)
	FLAG_ENTRY(PR_DISPLAY_TYPE,DT_EQUIPMENT,flagVALUE)
	FLAG_ENTRY(PR_DISPLAY_TYPE,DT_SEC_DISTLIST,flagVALUE)
	FLAG_ENTRY(PR_DISPLAY_TYPE,DT_TEMPLATE,flagVALUE)
	FLAG_ENTRY(PR_DISPLAY_TYPE,DT_CONTAINER,flagVALUE)
	FLAG_ENTRY(PR_DISPLAY_TYPE,DT_ADDRESS_TEMPLATE,flagVALUE)
	FLAG_ENTRY(PR_DISPLAY_TYPE,DT_SEARCH,flagVALUE)
	FLAG_ENTRY(PR_DISPLAY_TYPE,DT_MODIFIABLE,flagVALUE)
	FLAG_ENTRY(PR_DISPLAY_TYPE,DT_GLOBAL,flagVALUE)
	FLAG_ENTRY(PR_DISPLAY_TYPE,DT_LOCAL,flagVALUE)
	FLAG_ENTRY(PR_DISPLAY_TYPE,DT_WAN,flagVALUE)
	FLAG_ENTRY(PR_DISPLAY_TYPE,DT_NOT_SPECIFIC,flagVALUE)
	FLAG_ENTRY(PR_DISPLAY_TYPE,DT_FOLDER,flagVALUE)
	FLAG_ENTRY(PR_DISPLAY_TYPE,DT_FOLDER_LINK,flagVALUE)
	FLAG_ENTRY(PR_DISPLAY_TYPE,DT_FOLDER_SPECIAL,flagVALUE)

	//check and clear flags first, then look at values which remain
	FLAG_ENTRY(PR_DISPLAY_TYPE_EX,DTE_FLAG_REMOTE_VALID,flagFLAG)
	FLAG_ENTRY(PR_DISPLAY_TYPE_EX,DTE_FLAG_ACL_CAPABLE,flagFLAG)
	//This entry clears any high level bits so we can look at the low order as a value
	CLEAR_BITS_ENTRY(PR_DISPLAY_TYPE_EX,0xffff0000)
	FLAG_ENTRY3RDBYTE(PR_DISPLAY_TYPE_EX,DT_MAILUSER,Remote)//NULL value
	FLAG_ENTRY3RDBYTE(PR_DISPLAY_TYPE_EX,DT_DISTLIST,Remote)
	FLAG_ENTRY3RDBYTE(PR_DISPLAY_TYPE_EX,DT_FORUM,Remote)
	FLAG_ENTRY3RDBYTE(PR_DISPLAY_TYPE_EX,DT_AGENT,Remote)
	FLAG_ENTRY3RDBYTE(PR_DISPLAY_TYPE_EX,DT_ORGANIZATION,Remote)
	FLAG_ENTRY3RDBYTE(PR_DISPLAY_TYPE_EX,DT_PRIVATE_DISTLIST,Remote)
	FLAG_ENTRY3RDBYTE(PR_DISPLAY_TYPE_EX,DT_REMOTE_MAILUSER,Remote)
	FLAG_ENTRY3RDBYTE(PR_DISPLAY_TYPE_EX,DT_ROOM,Remote)
	FLAG_ENTRY3RDBYTE(PR_DISPLAY_TYPE_EX,DT_EQUIPMENT,Remote)
	FLAG_ENTRY3RDBYTE(PR_DISPLAY_TYPE_EX,DT_SEC_DISTLIST,Remote)
	FLAG_ENTRY4THBYTE(PR_DISPLAY_TYPE_EX,DT_MAILUSER,Local)//NULL value
	FLAG_ENTRY4THBYTE(PR_DISPLAY_TYPE_EX,DT_DISTLIST,Local)
	FLAG_ENTRY4THBYTE(PR_DISPLAY_TYPE_EX,DT_FORUM,Local)
	FLAG_ENTRY4THBYTE(PR_DISPLAY_TYPE_EX,DT_AGENT,Local)
	FLAG_ENTRY4THBYTE(PR_DISPLAY_TYPE_EX,DT_ORGANIZATION,Local)
	FLAG_ENTRY4THBYTE(PR_DISPLAY_TYPE_EX,DT_PRIVATE_DISTLIST,Local)
	FLAG_ENTRY4THBYTE(PR_DISPLAY_TYPE_EX,DT_REMOTE_MAILUSER,Local)
	FLAG_ENTRY4THBYTE(PR_DISPLAY_TYPE_EX,DT_ROOM,Local)
	FLAG_ENTRY4THBYTE(PR_DISPLAY_TYPE_EX,DT_EQUIPMENT,Local)
	FLAG_ENTRY4THBYTE(PR_DISPLAY_TYPE_EX,DT_SEC_DISTLIST,Local)

	FLAG_ENTRY(PR_FOLDER_TYPE,FOLDER_ROOT,flagVALUE)//NULL value
	FLAG_ENTRY(PR_FOLDER_TYPE,FOLDER_GENERIC,flagVALUE)
	FLAG_ENTRY(PR_FOLDER_TYPE,FOLDER_SEARCH,flagVALUE)

	FLAG_ENTRY(PR_FORM_MESSAGE_BEHAVIOR,MAPI_MESSAGE_BEHAVIOR_IPM,flagVALUE)//NULL value
	FLAG_ENTRY(PR_FORM_MESSAGE_BEHAVIOR,MAPI_MESSAGE_BEHAVIOR_FOLDER,flagVALUE)

	FLAG_ENTRY(PR_IMPORTANCE,IMPORTANCE_LOW,flagVALUE)//NULL value
	FLAG_ENTRY(PR_IMPORTANCE,IMPORTANCE_NORMAL,flagVALUE)
	FLAG_ENTRY(PR_IMPORTANCE,IMPORTANCE_HIGH,flagVALUE)

	FLAG_ENTRY(PR_MEMBER_RIGHTS,frightsReadAny,flagFLAG)
	FLAG_ENTRY(PR_MEMBER_RIGHTS,frightsCreate,flagFLAG)
	FLAG_ENTRY(PR_MEMBER_RIGHTS,frightsEditOwned,flagFLAG)
	FLAG_ENTRY(PR_MEMBER_RIGHTS,frightsDeleteOwned,flagFLAG)
	FLAG_ENTRY(PR_MEMBER_RIGHTS,frightsEditAny,flagFLAG)
	FLAG_ENTRY(PR_MEMBER_RIGHTS,frightsDeleteAny,flagFLAG)
	FLAG_ENTRY(PR_MEMBER_RIGHTS,frightsCreateSubfolder,flagFLAG)
	FLAG_ENTRY(PR_MEMBER_RIGHTS,frightsOwner,flagFLAG)
	FLAG_ENTRY(PR_MEMBER_RIGHTS,frightsContact,flagFLAG)
	FLAG_ENTRY(PR_MEMBER_RIGHTS,frightsVisible,flagFLAG)
	FLAG_ENTRY(PR_MEMBER_RIGHTS,frightsFreeBusySimple,flagFLAG)
	FLAG_ENTRY(PR_MEMBER_RIGHTS,frightsFreeBusyDetailed,flagFLAG)

	FLAG_ENTRY(PR_MESSAGE_FLAGS,MSGFLAG_READ,flagFLAG)
	FLAG_ENTRY(PR_MESSAGE_FLAGS,MSGFLAG_UNMODIFIED,flagFLAG)
	FLAG_ENTRY(PR_MESSAGE_FLAGS,MSGFLAG_SUBMIT,flagFLAG)
	FLAG_ENTRY(PR_MESSAGE_FLAGS,MSGFLAG_UNSENT,flagFLAG)
	FLAG_ENTRY(PR_MESSAGE_FLAGS,MSGFLAG_HASATTACH,flagFLAG)
	FLAG_ENTRY(PR_MESSAGE_FLAGS,MSGFLAG_FROMME,flagFLAG)
	FLAG_ENTRY(PR_MESSAGE_FLAGS,MSGFLAG_ASSOCIATED,flagFLAG)
	FLAG_ENTRY(PR_MESSAGE_FLAGS,MSGFLAG_RESEND,flagFLAG)
	FLAG_ENTRY(PR_MESSAGE_FLAGS,MSGFLAG_RN_PENDING,flagFLAG)
	FLAG_ENTRY(PR_MESSAGE_FLAGS,MSGFLAG_NRN_PENDING,flagFLAG)
	FLAG_ENTRY(PR_MESSAGE_FLAGS,MSGFLAG_ORIGIN_INTERNET,flagFLAG)
	FLAG_ENTRY(PR_MESSAGE_FLAGS,MSGFLAG_ORIGIN_MISC_EXT,flagFLAG)
	FLAG_ENTRY(PR_MESSAGE_FLAGS,MSGFLAG_ORIGIN_X400,flagFLAG)

	FLAG_ENTRY(PR_MSG_EDITOR_FORMAT,EDITOR_FORMAT_DONTKNOW,flagVALUE)//NULL value
	FLAG_ENTRY(PR_MSG_EDITOR_FORMAT,EDITOR_FORMAT_PLAINTEXT,flagVALUE)
	FLAG_ENTRY(PR_MSG_EDITOR_FORMAT,EDITOR_FORMAT_HTML,flagVALUE)
	FLAG_ENTRY(PR_MSG_EDITOR_FORMAT,EDITOR_FORMAT_RTF,flagVALUE)

	FLAG_ENTRY(PR_MSG_STATUS,MSGSTATUS_HIGHLIGHTED,flagFLAG)
	FLAG_ENTRY(PR_MSG_STATUS,MSGSTATUS_TAGGED,flagFLAG)
	FLAG_ENTRY(PR_MSG_STATUS,MSGSTATUS_HIDDEN,flagFLAG)
	FLAG_ENTRY(PR_MSG_STATUS,MSGSTATUS_DELMARKED,flagFLAG)
	FLAG_ENTRY(PR_MSG_STATUS,MSGSTATUS_ANSWERED,flagFLAG)
	FLAG_ENTRY(PR_MSG_STATUS,MSGSTATUS_DRAFT,flagFLAG)
	FLAG_ENTRY(PR_MSG_STATUS,MSGSTATUS_IN_CONFLICT,flagFLAG)
	FLAG_ENTRY(PR_MSG_STATUS,MSGSTATUS_REMOTE_DOWNLOAD,flagFLAG)
	FLAG_ENTRY(PR_MSG_STATUS,MSGSTATUS_REMOTE_DELETE,flagFLAG)
	FLAG_ENTRY(PR_MSG_STATUS,MSGSTATUS_MDNSENT,flagFLAG)

	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_OR_NAME_UNRECOGNIZED,flagVALUE)//NULL value
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_NO_DIAGNOSTIC,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_OR_NAME_AMBIGUOUS,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_MTS_CONGESTED,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_LOOP_DETECTED,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_RECIPIENT_UNAVAILABLE,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_MAXIMUM_TIME_EXPIRED,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_EITS_UNSUPPORTED,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_CONTENT_TOO_LONG,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_IMPRACTICAL_TO_CONVERT,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_PROHIBITED_TO_CONVERT,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_CONVERSION_UNSUBSCRIBED,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_PARAMETERS_INVALID,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_CONTENT_SYNTAX_IN_ERROR,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_LENGTH_CONSTRAINT_VIOLATD,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_NUMBER_CONSTRAINT_VIOLATD,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_CONTENT_TYPE_UNSUPPORTED,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_TOO_MANY_RECIPIENTS,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_NO_BILATERAL_AGREEMENT,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_CRITICAL_FUNC_UNSUPPORTED,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_CONVERSION_LOSS_PROHIB,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_LINE_TOO_LONG,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_PAGE_TOO_LONG,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_PICTORIAL_SYMBOL_LOST,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_PUNCTUATION_SYMBOL_LOST,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_ALPHABETIC_CHARACTER_LOST,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_MULTIPLE_INFO_LOSSES,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_REASSIGNMENT_PROHIBITED,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_REDIRECTION_LOOP_DETECTED,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_EXPANSION_PROHIBITED,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_SUBMISSION_PROHIBITED,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_EXPANSION_FAILED,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_RENDITION_UNSUPPORTED,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_MAIL_ADDRESS_INCORRECT,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_MAIL_OFFICE_INCOR_OR_INVD,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_MAIL_ADDRESS_INCOMPLETE,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_MAIL_RECIPIENT_UNKNOWN,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_MAIL_RECIPIENT_DECEASED,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_MAIL_ORGANIZATION_EXPIRED,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_MAIL_REFUSED,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_MAIL_UNCLAIMED,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_MAIL_RECIPIENT_MOVED,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_MAIL_RECIPIENT_TRAVELLING,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_MAIL_RECIPIENT_DEPARTED,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_MAIL_NEW_ADDRESS_UNKNOWN,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_MAIL_FORWARDING_UNWANTED,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_MAIL_FORWARDING_PROHIB,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_SECURE_MESSAGING_ERROR,flagVALUE)
	FLAG_ENTRY(PR_NDR_DIAG_CODE,MAPI_DIAG_DOWNGRADING_IMPOSSIBLE,flagVALUE)

	FLAG_ENTRY(PR_OBJECT_TYPE,MAPI_STORE,flagVALUE)//NULL value
	FLAG_ENTRY(PR_OBJECT_TYPE,MAPI_ADDRBOOK,flagVALUE)
	FLAG_ENTRY(PR_OBJECT_TYPE,MAPI_FOLDER,flagVALUE)
	FLAG_ENTRY(PR_OBJECT_TYPE,MAPI_ABCONT,flagVALUE)
	FLAG_ENTRY(PR_OBJECT_TYPE,MAPI_MESSAGE,flagVALUE)
	FLAG_ENTRY(PR_OBJECT_TYPE,MAPI_MAILUSER,flagVALUE)
	FLAG_ENTRY(PR_OBJECT_TYPE,MAPI_ATTACH,flagVALUE)
	FLAG_ENTRY(PR_OBJECT_TYPE,MAPI_DISTLIST,flagVALUE)
	FLAG_ENTRY(PR_OBJECT_TYPE,MAPI_PROFSECT,flagVALUE)
	FLAG_ENTRY(PR_OBJECT_TYPE,MAPI_STATUS,flagVALUE)
	FLAG_ENTRY(PR_OBJECT_TYPE,MAPI_SESSION,flagVALUE)
	FLAG_ENTRY(PR_OBJECT_TYPE,MAPI_FORMINFO,flagVALUE)

	FLAG_ENTRY(PR_PRIORITY,PRIO_NORMAL,flagVALUE)//NULL value
	FLAG_ENTRY(PR_PRIORITY,PRIO_URGENT,flagVALUE)
	FLAG_ENTRY(PR_PRIORITY,PRIO_NONURGENT,flagVALUE)

	FLAG_ENTRY(PR_PROFILE_CONFIG_FLAGS,CONFIG_SERVICE,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_CONFIG_FLAGS,CONFIG_SHOW_STARTUP_UI,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_CONFIG_FLAGS,CONFIG_SHOW_CONNECT_UI,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_CONFIG_FLAGS,CONFIG_PROMPT_FOR_CREDENTIALS,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_CONFIG_FLAGS,CONFIG_NO_AUTO_DETECT,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_CONFIG_FLAGS,CONFIG_OST_CACHE_ONLY,flagFLAG)

	FLAG_ENTRY(PR_PROFILE_CONNECT_FLAGS,CONNECT_USE_ADMIN_PRIVILEGE,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_CONNECT_FLAGS,CONNECT_NO_RPC_ENCRYPTION,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_CONNECT_FLAGS,CONNECT_USE_SEPARATE_CONNECTION,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_CONNECT_FLAGS,CONNECT_NO_UNDER_COVER_CONNECTION,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_CONNECT_FLAGS,CONNECT_ANONYMOUS_ACCESS,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_CONNECT_FLAGS,CONNECT_NO_NOTIFICATIONS,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_CONNECT_FLAGS,CONNECT_NO_ADDRESS_RESOLUTION,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_CONNECT_FLAGS,CONNECT_RESTORE_DATABASE,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_CONNECT_FLAGS,CONNECT_IGNORE_NO_PF,flagFLAG)

	FLAG_ENTRY(PR_PROFILE_OPEN_FLAGS,OPENSTORE_USE_ADMIN_PRIVILEGE,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_OPEN_FLAGS,OPENSTORE_PUBLIC,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_OPEN_FLAGS,OPENSTORE_HOME_LOGON,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_OPEN_FLAGS,OPENSTORE_TAKE_OWNERSHIP,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_OPEN_FLAGS,OPENSTORE_OVERRIDE_HOME_MDB,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_OPEN_FLAGS,OPENSTORE_TRANSPORT,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_OPEN_FLAGS,OPENSTORE_REMOTE_TRANSPORT,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_OPEN_FLAGS,OPENSTORE_INTERNET_ANONYMOUS,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_OPEN_FLAGS,OPENSTORE_ALTERNATE_SERVER,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_OPEN_FLAGS,OPENSTORE_IGNORE_HOME_MDB,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_OPEN_FLAGS,OPENSTORE_NO_MAIL,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_OPEN_FLAGS,OPENSTORE_OVERRIDE_LAST_MODIFIER,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_OPEN_FLAGS,OPENSTORE_CALLBACK_LOGON,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_OPEN_FLAGS,OPENSTORE_LOCAL,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_OPEN_FLAGS,OPENSTORE_FAIL_IF_NO_MAILBOX,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_OPEN_FLAGS,OPENSTORE_CACHE_EXCHANGE,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_OPEN_FLAGS,OPENSTORE_CLI_WITH_NAMEDPROP_FIX,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_OPEN_FLAGS,OPENSTORE_ENABLE_LAZY_LOGGING,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_OPEN_FLAGS,OPENSTORE_CLI_WITH_REPLID_GUID_MAPPING_FIX,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_OPEN_FLAGS,OPENSTORE_NO_LOCALIZATION,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_OPEN_FLAGS,OPENSTORE_RESTORE_DATABASE,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_OPEN_FLAGS,OPENSTORE_XFOREST_MOVE,flagFLAG)

	FLAG_ENTRY(PR_PROFILE_TRANSPORT_FLAGS,TRANSPORT_DOWNLOAD,flagFLAG)
	FLAG_ENTRY(PR_PROFILE_TRANSPORT_FLAGS,TRANSPORT_UPLOAD,flagFLAG)

	FLAG_ENTRY(PR_PROFILE_TYPE,PROFILE_PRIMARY_USER,flagVALUE)
	FLAG_ENTRY(PR_PROFILE_TYPE,PROFILE_DELEGATE,flagVALUE)
	FLAG_ENTRY(PR_PROFILE_TYPE,PROFILE_PUBLIC_STORE,flagVALUE)
	FLAG_ENTRY(PR_PROFILE_TYPE,PROFILE_SUBSCRIPTION,flagVALUE)

	//check and clear flags first, then look at values which remain
	FLAG_ENTRY(PR_RECIPIENT_TYPE,MAPI_P1,flagFLAG)
	FLAG_ENTRY(PR_RECIPIENT_TYPE,MAPI_SUBMITTED,flagFLAG)
	//This entry clears any high level bits so we can look at the low order as a value
	CLEAR_BITS_ENTRY(PR_RECIPIENT_TYPE,0xffff0000)
	FLAG_ENTRY(PR_RECIPIENT_TYPE,MAPI_ORIG,flagVALUE)//NULL value
	FLAG_ENTRY(PR_RECIPIENT_TYPE,MAPI_TO,flagVALUE)
	FLAG_ENTRY(PR_RECIPIENT_TYPE,MAPI_CC,flagVALUE)
	FLAG_ENTRY(PR_RECIPIENT_TYPE,MAPI_BCC,flagVALUE)
	FLAG_ENTRY(PR_RECIPIENT_TYPE,MAPI_P1,flagVALUE)

	FLAG_ENTRY(PR_REMOTE_PROGRESS,MSGSTATUS_REMOTE_DOWNLOAD,flagFLAG)
	FLAG_ENTRY(PR_REMOTE_PROGRESS,MSGSTATUS_REMOTE_DELETE,flagFLAG)

	//Check for 0xFFFFFFFF has to come first as a value check
	FLAG_ENTRY(PR_REPLICATION_STYLE,STYLE_DEFAULT,flagVALUE)
	FLAG_ENTRY(PR_REPLICATION_STYLE,STYLE_NEVER,flagFLAG)
	FLAG_ENTRY(PR_REPLICATION_STYLE,STYLE_NORMAL,flagFLAG)
	FLAG_ENTRY(PR_REPLICATION_STYLE,STYLE_ALWAYS,flagFLAG)

	FLAG_ENTRY(PR_RESOLVE_METHOD,RESOLVE_METHOD_DEFAULT,flagVALUE)//NULL value
	FLAG_ENTRY(PR_RESOLVE_METHOD,RESOLVE_METHOD_LAST_WRITER_WINS,flagFLAG)
	FLAG_ENTRY(PR_RESOLVE_METHOD,RESOLVE_METHOD_NO_CONFLICT_NOTIFICATION,flagFLAG)

	FLAG_ENTRY(PR_RESOURCE_FLAGS,SERVICE_DEFAULT_STORE,flagFLAG)
	FLAG_ENTRY(PR_RESOURCE_FLAGS,SERVICE_SINGLE_COPY,flagFLAG)
	FLAG_ENTRY(PR_RESOURCE_FLAGS,SERVICE_CREATE_WITH_STORE,flagFLAG)
	FLAG_ENTRY(PR_RESOURCE_FLAGS,SERVICE_PRIMARY_IDENTITY,flagFLAG)
	FLAG_ENTRY(PR_RESOURCE_FLAGS,SERVICE_NO_PRIMARY_IDENTITY,flagFLAG)
	FLAG_ENTRY(PR_RESOURCE_FLAGS,STATUS_DEFAULT_OUTBOUND,flagFLAG)
	FLAG_ENTRY(PR_RESOURCE_FLAGS,STATUS_DEFAULT_STORE,flagFLAG)
	FLAG_ENTRY(PR_RESOURCE_FLAGS,STATUS_PRIMARY_IDENTITY,flagFLAG)
	FLAG_ENTRY(PR_RESOURCE_FLAGS,STATUS_SIMPLE_STORE,flagFLAG)
	FLAG_ENTRY(PR_RESOURCE_FLAGS,STATUS_XP_PREFER_LAST,flagFLAG)
	FLAG_ENTRY(PR_RESOURCE_FLAGS,STATUS_NO_PRIMARY_IDENTITY,flagFLAG)
	FLAG_ENTRY(PR_RESOURCE_FLAGS,STATUS_NO_DEFAULT_STORE,flagFLAG)
	FLAG_ENTRY(PR_RESOURCE_FLAGS,STATUS_TEMP_SECTION,flagFLAG)
	FLAG_ENTRY(PR_RESOURCE_FLAGS,STATUS_OWN_STORE,flagFLAG)
	FLAG_ENTRY(PR_RESOURCE_FLAGS,HOOK_INBOUND,flagFLAG)
	FLAG_ENTRY(PR_RESOURCE_FLAGS,HOOK_OUTBOUND,flagFLAG)
	FLAG_ENTRY(PR_RESOURCE_FLAGS,STATUS_NEED_IPM_TREE,flagFLAG)
	FLAG_ENTRY(PR_RESOURCE_FLAGS,STATUS_PRIMARY_STORE,flagFLAG)
	FLAG_ENTRY(PR_RESOURCE_FLAGS,STATUS_SECONDARY_STORE,flagFLAG)

	FLAG_ENTRY(PR_RESOURCE_METHODS,STATUS_VALIDATE_STATE,flagFLAG)
	FLAG_ENTRY(PR_RESOURCE_METHODS,STATUS_SETTINGS_DIALOG,flagFLAG)
	FLAG_ENTRY(PR_RESOURCE_METHODS,STATUS_CHANGE_PASSWORD,flagFLAG)
	FLAG_ENTRY(PR_RESOURCE_METHODS,STATUS_FLUSH_QUEUES,flagFLAG)

	FLAG_ENTRY(PR_RESOURCE_TYPE,MAPI_STORE_PROVIDER,flagVALUE)
	FLAG_ENTRY(PR_RESOURCE_TYPE,MAPI_AB,flagVALUE)
	FLAG_ENTRY(PR_RESOURCE_TYPE,MAPI_AB_PROVIDER,flagVALUE)
	FLAG_ENTRY(PR_RESOURCE_TYPE,MAPI_TRANSPORT_PROVIDER,flagVALUE)
	FLAG_ENTRY(PR_RESOURCE_TYPE,MAPI_SPOOLER,flagVALUE)
	FLAG_ENTRY(PR_RESOURCE_TYPE,MAPI_PROFILE_PROVIDER,flagVALUE)
	FLAG_ENTRY(PR_RESOURCE_TYPE,MAPI_SUBSYSTEM,flagVALUE)
	FLAG_ENTRY(PR_RESOURCE_TYPE,MAPI_HOOK_PROVIDER,flagVALUE)

	FLAG_ENTRY(PR_ROH_FLAGS,ROHFLAGS_USE_ROH,flagFLAG)
	FLAG_ENTRY(PR_ROH_FLAGS,ROHFLAGS_SSL_ONLY,flagFLAG)
	FLAG_ENTRY(PR_ROH_FLAGS,ROHFLAGS_MUTUAL_AUTH,flagFLAG)
	FLAG_ENTRY(PR_ROH_FLAGS,ROHFLAGS_HTTP_FIRST_ON_FAST,flagFLAG)
	FLAG_ENTRY(PR_ROH_FLAGS,ROHFLAGS_HTTP_FIRST_ON_SLOW,flagFLAG)

	FLAG_ENTRY(PR_ROH_PROXY_AUTH_SCHEME,ROHAUTH_BASIC,flagFLAG)
	FLAG_ENTRY(PR_ROH_PROXY_AUTH_SCHEME,ROHAUTH_NTLM,flagFLAG)

	FLAG_ENTRY(PR_ROW_TYPE,TBL_LEAF_ROW,flagVALUE)
	FLAG_ENTRY(PR_ROW_TYPE,TBL_EMPTY_CATEGORY,flagVALUE)
	FLAG_ENTRY(PR_ROW_TYPE,TBL_EXPANDED_CATEGORY,flagVALUE)
	FLAG_ENTRY(PR_ROW_TYPE,TBL_COLLAPSED_CATEGORY,flagVALUE)

	FLAG_ENTRY(PR_SECURITY,SECURITY_SIGNED,flagFLAG)
	FLAG_ENTRY(PR_SECURITY,SECURITY_ENCRYPTED,flagFLAG)

	FLAG_ENTRY(PR_SEND_INTERNET_ENCODING,BODY_ENCODING_HTML,flagFLAG)
	FLAG_ENTRY(PR_SEND_INTERNET_ENCODING,BODY_ENCODING_TEXT_AND_HTML,flagFLAG)
	FLAG_ENTRY(PR_SEND_INTERNET_ENCODING,ENCODING_MIME,flagFLAG)
	FLAG_ENTRY(PR_SEND_INTERNET_ENCODING,ENCODING_PREFERENCE,flagFLAG)
	FLAG_ENTRY(PR_SEND_INTERNET_ENCODING,MAC_ATTACH_ENCODING_APPLEDOUBLE,flagFLAG)
	FLAG_ENTRY(PR_SEND_INTERNET_ENCODING,MAC_ATTACH_ENCODING_APPLESINGLE,flagFLAG)
	FLAG_ENTRY(PR_SEND_INTERNET_ENCODING,MAC_ATTACH_ENCODING_UUENCODE,flagFLAG)

	FLAG_ENTRY(PR_ORIGINAL_SENSITIVITY,SENSITIVITY_NONE,flagVALUE)//NULL value
	FLAG_ENTRY(PR_ORIGINAL_SENSITIVITY,SENSITIVITY_PERSONAL,flagVALUE)
	FLAG_ENTRY(PR_ORIGINAL_SENSITIVITY,SENSITIVITY_PRIVATE,flagVALUE)
	FLAG_ENTRY(PR_ORIGINAL_SENSITIVITY,SENSITIVITY_COMPANY_CONFIDENTIAL,flagVALUE)

	FLAG_ENTRY(PR_PST_ENCRYPTION,PSTF_NO_ENCRYPTION,flagFLAG)
	FLAG_ENTRY(PR_PST_ENCRYPTION,PSTF_COMPRESSABLE_ENCRYPTION,flagFLAG)
	FLAG_ENTRY(PR_PST_ENCRYPTION,PSTF_BEST_ENCRYPTION,flagFLAG)

	FLAG_ENTRY(PR_SENSITIVITY,SENSITIVITY_NONE,flagVALUE)//NULL value
	FLAG_ENTRY(PR_SENSITIVITY,SENSITIVITY_PERSONAL,flagVALUE)
	FLAG_ENTRY(PR_SENSITIVITY,SENSITIVITY_PRIVATE,flagVALUE)
	FLAG_ENTRY(PR_SENSITIVITY,SENSITIVITY_COMPANY_CONFIDENTIAL,flagVALUE)

	FLAG_ENTRY(PR_STATUS,FLDSTATUS_HIGHLIGHTED,flagFLAG)
	FLAG_ENTRY(PR_STATUS,FLDSTATUS_TAGGED,flagFLAG)
	FLAG_ENTRY(PR_STATUS,FLDSTATUS_HIDDEN,flagFLAG)
	FLAG_ENTRY(PR_STATUS,FLDSTATUS_DELMARKED,flagFLAG)

	FLAG_ENTRY(PR_STATUS_CODE,STATUS_AVAILABLE,flagFLAG)
	FLAG_ENTRY(PR_STATUS_CODE,STATUS_FAILURE,flagFLAG)
	FLAG_ENTRY(PR_STATUS_CODE,STATUS_OFFLINE,flagFLAG)
	FLAG_ENTRY(PR_STATUS_CODE,STATUS_INBOUND_ACTIVE,flagFLAG)
	FLAG_ENTRY(PR_STATUS_CODE,STATUS_INBOUND_ENABLED,flagFLAG)
	FLAG_ENTRY(PR_STATUS_CODE,STATUS_INBOUND_FLUSH,flagFLAG)
	FLAG_ENTRY(PR_STATUS_CODE,STATUS_OUTBOUND_ACTIVE,flagFLAG)
	FLAG_ENTRY(PR_STATUS_CODE,STATUS_OUTBOUND_ENABLED,flagFLAG)
	FLAG_ENTRY(PR_STATUS_CODE,STATUS_OUTBOUND_FLUSH,flagFLAG)
	FLAG_ENTRY(PR_STATUS_CODE,STATUS_REMOTE_ACCESS,flagFLAG)

	FLAG_ENTRY(PR_STORE_STATE,STORE_HAS_SEARCHES,flagFLAG)

	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_ENTRYID_UNIQUE,flagFLAG)
	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_READONLY,flagFLAG)
	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_SEARCH_OK,flagFLAG)
	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_MODIFY_OK,flagFLAG)
	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_CREATE_OK,flagFLAG)
	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_ATTACH_OK,flagFLAG)
	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_OLE_OK,flagFLAG)
	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_SUBMIT_OK,flagFLAG)
	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_NOTIFY_OK,flagFLAG)
	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_MV_PROPS_OK,flagFLAG)
	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_CATEGORIZE_OK,flagFLAG)
	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_RTF_OK,flagFLAG)
	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_RESTRICTION_OK,flagFLAG)
	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_SORT_OK,flagFLAG)
	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_PUBLIC_FOLDERS,flagFLAG)
	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_UNCOMPRESSED_RTF,flagFLAG)
	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_HTML_OK,flagFLAG)
	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_ANSI_OK,flagFLAG)
	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_UNICODE_OK,flagFLAG)
	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_LOCALSTORE,flagFLAG)
	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_ITEMPROC,flagFLAG)
	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_PUSHER_OK,flagFLAG)
	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_FULLTEXT_QUERY_OK,flagFLAG)
	FLAG_ENTRY(PR_STORE_SUPPORT_MASK,STORE_FILTER_SEARCH_OK,flagFLAG)

	FLAG_ENTRY(PR_SUBMIT_FLAGS,SUBMITFLAG_LOCKED,flagFLAG)
	FLAG_ENTRY(PR_SUBMIT_FLAGS,SUBMITFLAG_PREPROCESS,flagFLAG)

	FLAG_ENTRY(PR_TRUST_SENDER,PR_TRUST_SENDER_NO,flagVALUE)//NULL value
	FLAG_ENTRY(PR_TRUST_SENDER,PR_TRUST_SENDER_YES,flagVALUE)

	FLAG_ENTRY(PR_VALID_FOLDER_MASK,FOLDER_IPM_SUBTREE_VALID,flagFLAG)
	FLAG_ENTRY(PR_VALID_FOLDER_MASK,FOLDER_IPM_INBOX_VALID,flagFLAG)
	FLAG_ENTRY(PR_VALID_FOLDER_MASK,FOLDER_IPM_OUTBOX_VALID,flagFLAG)
	FLAG_ENTRY(PR_VALID_FOLDER_MASK,FOLDER_IPM_WASTEBASKET_VALID,flagFLAG)
	FLAG_ENTRY(PR_VALID_FOLDER_MASK,FOLDER_IPM_SENTMAIL_VALID,flagFLAG)
	FLAG_ENTRY(PR_VALID_FOLDER_MASK,FOLDER_VIEWS_VALID,flagFLAG)
	FLAG_ENTRY(PR_VALID_FOLDER_MASK,FOLDER_COMMON_VIEWS_VALID,flagFLAG)
	FLAG_ENTRY(PR_VALID_FOLDER_MASK,FOLDER_FINDER_VALID,flagFLAG)

	FLAG_ENTRY(PR_X400_ENVELOPE_TYPE,ENV_BLANK,flagVALUE)//NULL value
	FLAG_ENTRY(PR_X400_ENVELOPE_TYPE,ENV_RECIP_NUM,flagFLAG)
	FLAG_ENTRY(PR_X400_ENVELOPE_TYPE,ENV_MSG_EXT,flagFLAG)
	FLAG_ENTRY(PR_X400_ENVELOPE_TYPE,ENV_RECIP_EXT,flagFLAG)

	FLAG_ENTRY(PR_FOLDER_FLAGS,MDB_FOLDER_IPM,flagFLAG)
	FLAG_ENTRY(PR_FOLDER_FLAGS,MDB_FOLDER_SEARCH,flagFLAG)
	FLAG_ENTRY(PR_FOLDER_FLAGS,MDB_FOLDER_NORMAL,flagFLAG)
	FLAG_ENTRY(PR_FOLDER_FLAGS,MDB_FOLDER_RULES,flagFLAG)

	//Check for 0xFFFFFFFF has to come first as a value check
	FLAG_ENTRY(PR_STORAGE_LIMIT_INFORMATION,MDB_QUOTA_NOQUOTA,flagVALUE)
	FLAG_ENTRY(PR_STORAGE_LIMIT_INFORMATION,MDB_LIMIT_BELOW,flagFLAG)
	FLAG_ENTRY(PR_STORAGE_LIMIT_INFORMATION,MDB_LIMIT_ISSUE_WARNING,flagFLAG)
	FLAG_ENTRY(PR_STORAGE_LIMIT_INFORMATION,MDB_LIMIT_PROHIBIT_SEND,flagFLAG)
	FLAG_ENTRY(PR_STORAGE_LIMIT_INFORMATION,MDB_LIMIT_NO_CHECK,flagFLAG)
	FLAG_ENTRY(PR_STORAGE_LIMIT_INFORMATION,MDB_LIMIT_DISABLED,flagFLAG)

	FLAG_ENTRY(PR_RULE_STATE,ST_DISABLED,flagVALUE)//NULL Value
	FLAG_ENTRY(PR_RULE_STATE,ST_ENABLED,flagFLAG)
	FLAG_ENTRY(PR_RULE_STATE,ST_ERROR,flagFLAG)
	FLAG_ENTRY(PR_RULE_STATE,ST_ONLY_WHEN_OOF,flagFLAG)
	FLAG_ENTRY(PR_RULE_STATE,ST_KEEP_OOF_HIST,flagFLAG)
	FLAG_ENTRY(PR_RULE_STATE,ST_EXIT_LEVEL,flagFLAG)
	FLAG_ENTRY(PR_RULE_STATE,ST_SKIP_IF_SCL_IS_SAFE,flagFLAG)
	FLAG_ENTRY(PR_RULE_STATE,ST_RULE_PARSE_ERROR,flagFLAG)
	FLAG_ENTRY(PR_RULE_STATE,ST_CLEAR_OOF_HIST,flagFLAG)
	
	FLAG_ENTRY(PR_RULE_MSG_STATE,ST_DISABLED,flagVALUE)//NULL Value
	FLAG_ENTRY(PR_RULE_MSG_STATE,ST_ENABLED,flagFLAG)
	FLAG_ENTRY(PR_RULE_MSG_STATE,ST_ERROR,flagFLAG)
	FLAG_ENTRY(PR_RULE_MSG_STATE,ST_ONLY_WHEN_OOF,flagFLAG)
	FLAG_ENTRY(PR_RULE_MSG_STATE,ST_KEEP_OOF_HIST,flagFLAG)
	FLAG_ENTRY(PR_RULE_MSG_STATE,ST_EXIT_LEVEL,flagFLAG)
	FLAG_ENTRY(PR_RULE_MSG_STATE,ST_SKIP_IF_SCL_IS_SAFE,flagFLAG)
	FLAG_ENTRY(PR_RULE_MSG_STATE,ST_RULE_PARSE_ERROR,flagFLAG)
	FLAG_ENTRY(PR_RULE_MSG_STATE,ST_CLEAR_OOF_HIST,flagFLAG)

	FLAG_ENTRY(PR_DL_REPORT_FLAGS,PRIV_DL_HIDE_MEMBERS,flagFLAG)
	FLAG_ENTRY(PR_DL_REPORT_FLAGS,PRIV_DL_REPORT_TO_ORIG,flagFLAG)
	FLAG_ENTRY(PR_DL_REPORT_FLAGS,PRIV_DL_REPORT_TO_OWNER,flagFLAG)
	FLAG_ENTRY(PR_DL_REPORT_FLAGS,PRIV_DL_ALLOW_OOF,flagFLAG)

	FLAG_ENTRY(PR_RULE_ERROR,RULE_ERR_UNKNOWN,flagVALUE)
	FLAG_ENTRY(PR_RULE_ERROR,RULE_ERR_LOAD,flagVALUE)
	FLAG_ENTRY(PR_RULE_ERROR,RULE_ERR_DELIVERY,flagVALUE)
	FLAG_ENTRY(PR_RULE_ERROR,RULE_ERR_PARSING,flagVALUE)
	FLAG_ENTRY(PR_RULE_ERROR,RULE_ERR_CREATE_DAE,flagVALUE)
	FLAG_ENTRY(PR_RULE_ERROR,RULE_ERR_NO_FOLDER,flagVALUE)
	FLAG_ENTRY(PR_RULE_ERROR,RULE_ERR_NO_RIGHTS,flagVALUE)
	FLAG_ENTRY(PR_RULE_ERROR,RULE_ERR_CREATE_DAM,flagVALUE)
	FLAG_ENTRY(PR_RULE_ERROR,RULE_ERR_NO_SENDAS,flagVALUE)
	FLAG_ENTRY(PR_RULE_ERROR,RULE_ERR_NO_TEMPLATE,flagVALUE)
	FLAG_ENTRY(PR_RULE_ERROR,RULE_ERR_EXECUTION,flagVALUE)
	FLAG_ENTRY(PR_RULE_ERROR,RULE_ERR_QUOTA_EXCEEDED,flagVALUE)
	FLAG_ENTRY(PR_RULE_ERROR,RULE_ERR_TOO_MANY_RECIPS,flagVALUE)

	FLAG_ENTRY(PR_INETMAIL_OVERRIDE_FORMAT,ENCODEDONTKNOW,flagVALUE)//NULL Value
	FLAG_ENTRY(PR_INETMAIL_OVERRIDE_FORMAT,ENCODEMIME,flagVALUE)
	FLAG_ENTRY(PR_INETMAIL_OVERRIDE_FORMAT,ENCODEUUENCODE,flagVALUE)
	FLAG_ENTRY(PR_INETMAIL_OVERRIDE_FORMAT,ENCODEBINHEX,flagVALUE)

	FLAG_ENTRY(PR_AGING_GRANULARITY,AG_MONTHS,flagVALUE)//NULL Value
	FLAG_ENTRY(PR_AGING_GRANULARITY,AG_WEEKS,flagVALUE)
	FLAG_ENTRY(PR_AGING_GRANULARITY,AG_DAYS,flagVALUE)

	FLAG_ENTRY(PR_AGING_DEFAULT,AG_DEFAULT_FILE,flagFLAG)
	FLAG_ENTRY(PR_AGING_DEFAULT,AG_DEFAULT_ALL,flagFLAG)

	FLAG_ENTRY(PR_FLAG_STATUS,flwupNone,flagVALUE)//NULL Value
	FLAG_ENTRY(PR_FLAG_STATUS,flwupComplete,flagVALUE)
	FLAG_ENTRY(PR_FLAG_STATUS,flwupMarked,flagVALUE)

	FLAG_ENTRY(PR_FOLLOWUP_ICON,olNoFlagIcon,flagVALUE)//NULL Value
	FLAG_ENTRY(PR_FOLLOWUP_ICON,olPurpleFlagIcon,flagVALUE)
	FLAG_ENTRY(PR_FOLLOWUP_ICON,olOrangeFlagIcon,flagVALUE)
	FLAG_ENTRY(PR_FOLLOWUP_ICON,olGreenFlagIcon,flagVALUE)
	FLAG_ENTRY(PR_FOLLOWUP_ICON,olYellowFlagIcon,flagVALUE)
	FLAG_ENTRY(PR_FOLLOWUP_ICON,olBlueFlagIcon,flagVALUE)
	FLAG_ENTRY(PR_FOLLOWUP_ICON,olRedFlagIcon,flagVALUE)

	FLAG_ENTRY(PR_GENDER,genderUnspecified,flagVALUE)//NULL Value
	FLAG_ENTRY(PR_GENDER,genderFemale,flagVALUE)
	FLAG_ENTRY(PR_GENDER,genderMale,flagVALUE)

	FLAG_ENTRY(PR_CERT_DEFAULTS,MSG_DEFAULTS_NONE,flagVALUE)//NULL Value
	FLAG_ENTRY(PR_CERT_DEFAULTS,MSG_DEFAULTS_FOR_FORMAT,flagFLAG)
	FLAG_ENTRY(PR_CERT_DEFAULTS,MSG_DEFAULTS_GLOBAL,flagFLAG)
	FLAG_ENTRY(PR_CERT_DEFAULTS,MSG_DEFAULTS_SEND_CERT,flagFLAG)

	FLAG_ENTRY(PR_SENDER_ID_STATUS,SENDER_ID_NEUTRAL,flagVALUE)
	FLAG_ENTRY(PR_SENDER_ID_STATUS,SENDER_ID_PASS,flagVALUE)
	FLAG_ENTRY(PR_SENDER_ID_STATUS,SENDER_ID_FAIL,flagVALUE)
	FLAG_ENTRY(PR_SENDER_ID_STATUS,SENDER_ID_SOFT_FAIL,flagVALUE)
	FLAG_ENTRY(PR_SENDER_ID_STATUS,SENDER_ID_NONE,flagVALUE)
	FLAG_ENTRY(PR_SENDER_ID_STATUS,SENDER_ID_TEMP_ERROR,flagVALUE)
	FLAG_ENTRY(PR_SENDER_ID_STATUS,SENDER_ID_PERM_ERROR,flagVALUE)

	FLAG_ENTRY(PR_JUNK_THRESHOLD,SPAM_FILTERING_NONE,flagVALUE)
	FLAG_ENTRY(PR_JUNK_THRESHOLD,SPAM_FILTERING_LOW,flagVALUE)
	FLAG_ENTRY(PR_JUNK_THRESHOLD,SPAM_FILTERING_MEDIUM,flagVALUE)
	FLAG_ENTRY(PR_JUNK_THRESHOLD,SPAM_FILTERING_HIGH,flagVALUE)
	FLAG_ENTRY(PR_JUNK_THRESHOLD,SPAM_FILTERING_TRUSTED_ONLY,flagVALUE)

	FLAG_ENTRY(PR_RECIPIENT_FLAGS,RECIP_UNSENDABLE,flagVALUE) //NULL Value
	FLAG_ENTRY(PR_RECIPIENT_FLAGS,RECIP_SENDABLE,flagFLAG)
	FLAG_ENTRY(PR_RECIPIENT_FLAGS,RECIP_ORGANIZER,flagFLAG)
	FLAG_ENTRY(PR_RECIPIENT_FLAGS,RECIP_EXCEPTIONAL_RESPONSE,flagFLAG)
	FLAG_ENTRY(PR_RECIPIENT_FLAGS,RECIP_EXCEPTIONAL_DELETED,flagFLAG)
	FLAG_ENTRY(PR_RECIPIENT_FLAGS,RECIP_ORIGINAL,flagFLAG)

	FLAG_ENTRY(PR_RECIPIENT_TRACKSTATUS,respNone,flagVALUE) // NULL Value
	FLAG_ENTRY(PR_RECIPIENT_TRACKSTATUS,respOrganized,flagVALUE)
	FLAG_ENTRY(PR_RECIPIENT_TRACKSTATUS,respTentative,flagVALUE)
	FLAG_ENTRY(PR_RECIPIENT_TRACKSTATUS,respAccepted,flagVALUE)
	FLAG_ENTRY(PR_RECIPIENT_TRACKSTATUS,respDeclined,flagVALUE)
	FLAG_ENTRY(PR_RECIPIENT_TRACKSTATUS,respNotResponded,flagVALUE)

	FLAG_ENTRY(PR_TODO_ITEM_FLAGS,TDIP_None,flagVALUE) //NULL Value
	FLAG_ENTRY(PR_TODO_ITEM_FLAGS,TDIP_Active,flagFLAG)
	FLAG_ENTRY(PR_TODO_ITEM_FLAGS,TDIP_ActiveRecip,flagFLAG)

	FLAG_ENTRY(PR_WB_SF_STORAGE_TYPE,SFST_NUMBER,flagFLAG)
	FLAG_ENTRY(PR_WB_SF_STORAGE_TYPE,SFST_TEXT,flagFLAG)
	FLAG_ENTRY(PR_WB_SF_STORAGE_TYPE,SFST_BINARY,flagFLAG)
	FLAG_ENTRY(PR_WB_SF_STORAGE_TYPE,SFST_MRES,flagFLAG)
	FLAG_ENTRY(PR_WB_SF_STORAGE_TYPE,SFST_FILTERSTREAM,flagFLAG)
	FLAG_ENTRY(PR_WB_SF_STORAGE_TYPE,SFST_FOLDERNAME,flagFLAG)
	FLAG_ENTRY(PR_WB_SF_STORAGE_TYPE,SFST_FOLDERLIST,flagFLAG)
	FLAG_ENTRY(PR_WB_SF_STORAGE_TYPE,SFST_TIMERES_MONTHLY,flagFLAG)
	FLAG_ENTRY(PR_WB_SF_STORAGE_TYPE,SFST_TIMERES_WEEKLY,flagFLAG)
	FLAG_ENTRY(PR_WB_SF_STORAGE_TYPE,SFST_TIMERES_DAILY,flagFLAG)
	FLAG_ENTRY(PR_WB_SF_STORAGE_TYPE,SFST_DEAD,flagFLAG)

	FLAG_ENTRY(PR_ATTACHMENT_FLAGS,afException,flagFLAG)

	{PROP_ID(PR_ICON_INDEX),0x00000001,flagVALUE,L"Post"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000003,flagVALUE,L"Other"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000100,flagVALUE,L"Read mail"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000101,flagVALUE,L"Unread mail"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000102,flagVALUE,L"Submitted mail"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000103,flagVALUE,L"Unsent mail"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000104,flagVALUE,L"Receipt mail"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000105,flagVALUE,L"Replied mail"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000106,flagVALUE,L"Forwarded mail"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000107,flagVALUE,L"Remote mail"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000108,flagVALUE,L"Delivery Receipt"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000109,flagVALUE,L"Read Receipt"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x0000010A,flagVALUE,L"Nondelivery Receipt"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x0000010B,flagVALUE,L"Nonread Receipt"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x0000010C,flagVALUE,L"Recall_S mail"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x0000010D,flagVALUE,L"Recall_F mail"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x0000010E,flagVALUE,L"Tracking mail"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x0000011B,flagVALUE,L"Out of Office mail"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x0000011C,flagVALUE,L"Recall mail"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000130,flagVALUE,L"Tracked mail"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000200,flagVALUE,L"Contact"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000202,flagVALUE,L"Distribution List"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000300,flagVALUE,L"Sticky Note, Blue"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000301,flagVALUE,L"Sticky Note, Green"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000302,flagVALUE,L"Sticky Note, Pink"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000303,flagVALUE,L"Sticky Note, Yellow"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000304,flagVALUE,L"Sticky Note, White"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000400,flagVALUE,L"Single Instance Appointment"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000401,flagVALUE,L"Recurring Appointment"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000402,flagVALUE,L"Single Instance Meeting"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000403,flagVALUE,L"Recurring Meeting"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000404,flagVALUE,L"Meeting Request / Full Update"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000405,flagVALUE,L"Accept"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000406,flagVALUE,L"Decline"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000407,flagVALUE,L"Tentatively Accept"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000408,flagVALUE,L"Cancelation"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000409,flagVALUE,L"Informational Update"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000500,flagVALUE,L"Task/Task Update"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000501,flagVALUE,L"Unassigned Recurring Task"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000502,flagVALUE,L"Assignee's Task"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000503,flagVALUE,L"Assigner's Task"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000504,flagVALUE,L"Task Request"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000505,flagVALUE,L"Task Acceptance"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000506,flagVALUE,L"Task Rejection"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000601,flagVALUE,L"Journal Conversation"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000602,flagVALUE,L"Journal E-mail Message"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000603,flagVALUE,L"Journal Meeting request"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000604,flagVALUE,L"Journal Meeting response"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000606,flagVALUE,L"Journal Task request"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000607,flagVALUE,L"Journal Task response"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000608,flagVALUE,L"Journal Note"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000609,flagVALUE,L"Journal Fax"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x0000060A,flagVALUE,L"Journal Phone call"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x0000060B,flagVALUE,L"Journal Task"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x0000060C,flagVALUE,L"Journal Letter"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x0000060D,flagVALUE,L"Journal Microsoft Office Word"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x0000060E,flagVALUE,L"Journal Microsoft Office Excel"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x0000060F,flagVALUE,L"Journal Microsoft Office PowerPoint"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000610,flagVALUE,L"Journal Microsoft Office Access"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000612,flagVALUE,L"Journal Document"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000613,flagVALUE,L"Journal Meeting"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000614,flagVALUE,L"Journal Meeting cancellation"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0x00000615,flagVALUE,L"Journal Remote session"}, // STRING_OK
	{PROP_ID(PR_ICON_INDEX),0xFFFFFFFF,flagVALUE,L"New mail"}, // STRING_OK

	NAMEDPROP_FLAG_ENTRY(dispidCustomFlag,PSETID_Common,INSP_PROPDEFINITION,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidCustomFlag,PSETID_Common,INSP_ONEOFFFLAGS,flagFLAG)

	NAMEDPROP_FLAG_ENTRY(dispidBusyStatus,PSETID_Common,olFree,flagVALUE)  // NULL Value
	NAMEDPROP_FLAG_ENTRY(dispidBusyStatus,PSETID_Common,olTentative,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidBusyStatus,PSETID_Common,olBusy,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidBusyStatus,PSETID_Common,olOutOfOffice,flagVALUE)

	NAMEDPROP_FLAG_ENTRY(dispidIntendedBusyStatus,PSETID_Appointment,olFree,flagVALUE)  // NULL Value
	NAMEDPROP_FLAG_ENTRY(dispidIntendedBusyStatus,PSETID_Appointment,olTentative,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidIntendedBusyStatus,PSETID_Appointment,olBusy,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidIntendedBusyStatus,PSETID_Appointment,olOutOfOffice,flagVALUE)

	NAMEDPROP_FLAG_ENTRY(dispidApptAuxFlags,PSETID_Appointment,auxApptFlagCopied,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidApptAuxFlags,PSETID_Appointment,auxApptFlagForceMtgResponse,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidApptAuxFlags,PSETID_Appointment,auxApptFlagForwarded,flagFLAG)

	{PROP_TAG((guidPSETID_Appointment),dispidApptColor),0,flagVALUE,L"None"}, // STRING_OK
	{PROP_TAG((guidPSETID_Appointment),dispidApptColor),1,flagVALUE,L"Red"}, // STRING_OK
	{PROP_TAG((guidPSETID_Appointment),dispidApptColor),2,flagVALUE,L"Blue"}, // STRING_OK
	{PROP_TAG((guidPSETID_Appointment),dispidApptColor),3,flagVALUE,L"Green"}, // STRING_OK
	{PROP_TAG((guidPSETID_Appointment),dispidApptColor),4,flagVALUE,L"Grey"}, // STRING_OK
	{PROP_TAG((guidPSETID_Appointment),dispidApptColor),5,flagVALUE,L"Orange"}, // STRING_OK
	{PROP_TAG((guidPSETID_Appointment),dispidApptColor),6,flagVALUE,L"Cyan"}, // STRING_OK
	{PROP_TAG((guidPSETID_Appointment),dispidApptColor),7,flagVALUE,L"Olive"}, // STRING_OK
	{PROP_TAG((guidPSETID_Appointment),dispidApptColor),8,flagVALUE,L"Purple"}, // STRING_OK
	{PROP_TAG((guidPSETID_Appointment),dispidApptColor),9,flagVALUE,L"Teal"}, // STRING_OK
	{PROP_TAG((guidPSETID_Appointment),dispidApptColor),10,flagVALUE,L"Yellow"}, // STRING_OK

	NAMEDPROP_FLAG_ENTRY(dispidApptStateFlags,PSETID_Appointment,asfNone,flagVALUE) // NULL Value
	NAMEDPROP_FLAG_ENTRY(dispidApptStateFlags,PSETID_Appointment,asfMeeting,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidApptStateFlags,PSETID_Appointment,asfReceived,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidApptStateFlags,PSETID_Appointment,asfCancelled,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidApptStateFlags,PSETID_Appointment,asfForward,flagFLAG)

	NAMEDPROP_FLAG_ENTRY(dispidResponseStatus,PSETID_Appointment,respNone,flagVALUE) // NULL Value
	NAMEDPROP_FLAG_ENTRY(dispidResponseStatus,PSETID_Appointment,respOrganized,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidResponseStatus,PSETID_Appointment,respTentative,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidResponseStatus,PSETID_Appointment,respAccepted,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidResponseStatus,PSETID_Appointment,respDeclined,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidResponseStatus,PSETID_Appointment,respNotResponded,flagVALUE)

	NAMEDPROP_FLAG_ENTRY(dispidRecurType,PSETID_Appointment,rectypeNone,flagVALUE) // NULL Value
	NAMEDPROP_FLAG_ENTRY(dispidRecurType,PSETID_Appointment,rectypeDaily,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidRecurType,PSETID_Appointment,rectypeWeekly,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidRecurType,PSETID_Appointment,rectypeMonthly,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidRecurType,PSETID_Appointment,rectypeYearly,flagVALUE)

	NAMEDPROP_FLAG_ENTRY(dispidConfType,PSETID_Appointment,confNetMeeting,flagVALUE) // NULL Value
	NAMEDPROP_FLAG_ENTRY(dispidConfType,PSETID_Appointment,confNetShow,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidConfType,PSETID_Appointment,confExchange,flagVALUE)

	NAMEDPROP_FLAG_ENTRY(dispidChangeHighlight,PSETID_Appointment,BIT_CH_START,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidChangeHighlight,PSETID_Appointment,BIT_CH_END,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidChangeHighlight,PSETID_Appointment,BIT_CH_RECUR,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidChangeHighlight,PSETID_Appointment,BIT_CH_LOCATION,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidChangeHighlight,PSETID_Appointment,BIT_CH_SUBJECT,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidChangeHighlight,PSETID_Appointment,BIT_CH_REQATT,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidChangeHighlight,PSETID_Appointment,BIT_CH_OPTATT,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidChangeHighlight,PSETID_Appointment,BIT_CH_BODY,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidChangeHighlight,PSETID_Appointment,BIT_CH_CUSTOM,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidChangeHighlight,PSETID_Appointment,BIT_CH_SILENT,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidChangeHighlight,PSETID_Appointment,BIT_CH_ALLOWPROPOSE,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidChangeHighlight,PSETID_Appointment,BIT_CH_CONF,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidChangeHighlight,PSETID_Appointment,BIT_CH_ATT_REM,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidChangeHighlight,PSETID_Appointment,BIT_CH_NOTUSED,flagFLAG)

	NAMEDPROP_FLAG_ENTRY(dispidMeetingType,PSETID_Meeting,mtgEmpty,flagVALUE) // NULL Value
	NAMEDPROP_FLAG_ENTRY(dispidMeetingType,PSETID_Meeting,mtgRequest,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidMeetingType,PSETID_Meeting,mtgFull,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidMeetingType,PSETID_Meeting,mtgInfo,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidMeetingType,PSETID_Meeting,mtgOutofDate,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidMeetingType,PSETID_Meeting,mtgDelegatorCopy,flagFLAG)

	NAMEDPROP_FLAG_ENTRY(dispidNonSendToTrackStatus,PSETID_Meeting,respNone,flagVALUE) // NULL Value
	NAMEDPROP_FLAG_ENTRY(dispidNonSendToTrackStatus,PSETID_Meeting,respOrganized,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidNonSendToTrackStatus,PSETID_Meeting,respTentative,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidNonSendToTrackStatus,PSETID_Meeting,respAccepted,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidNonSendToTrackStatus,PSETID_Meeting,respDeclined,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidNonSendToTrackStatus,PSETID_Meeting,respNotResponded,flagVALUE)

	NAMEDPROP_FLAG_ENTRY(dispidNonSendCcTrackStatus,PSETID_Meeting,respNone,flagVALUE) // NULL Value
	NAMEDPROP_FLAG_ENTRY(dispidNonSendCcTrackStatus,PSETID_Meeting,respOrganized,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidNonSendCcTrackStatus,PSETID_Meeting,respTentative,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidNonSendCcTrackStatus,PSETID_Meeting,respAccepted,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidNonSendCcTrackStatus,PSETID_Meeting,respDeclined,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidNonSendCcTrackStatus,PSETID_Meeting,respNotResponded,flagVALUE)

	NAMEDPROP_FLAG_ENTRY(dispidNonSendBccTrackStatus,PSETID_Meeting,respNone,flagVALUE) // NULL Value
	NAMEDPROP_FLAG_ENTRY(dispidNonSendBccTrackStatus,PSETID_Meeting,respOrganized,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidNonSendBccTrackStatus,PSETID_Meeting,respTentative,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidNonSendBccTrackStatus,PSETID_Meeting,respAccepted,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidNonSendBccTrackStatus,PSETID_Meeting,respDeclined,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidNonSendBccTrackStatus,PSETID_Meeting,respNotResponded,flagVALUE)

	NAMEDPROP_FLAG_ENTRY(dispidSideEffects,PSETID_Common,seOpenToDelete,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidSideEffects,PSETID_Common,seNoFrame,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidSideEffects,PSETID_Common,seCoerceToInbox,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidSideEffects,PSETID_Common,seOpenToCopy,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidSideEffects,PSETID_Common,seOpenToMove,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidSideEffects,PSETID_Common,seOpenForCtxMenu,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidSideEffects,PSETID_Common,seCannotUndoDelete,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidSideEffects,PSETID_Common,seCannotUndoCopy,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidSideEffects,PSETID_Common,seCannotUndoMove,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidSideEffects,PSETID_Common,seHasScript,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidSideEffects,PSETID_Common,seOpenToPermDelete,flagFLAG)

	NAMEDPROP_FLAG_ENTRY(LID_CALENDAR_TYPE,PSETID_Meeting,CAL_GREGORIAN,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(LID_CALENDAR_TYPE,PSETID_Meeting,CAL_GREGORIAN_US,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(LID_CALENDAR_TYPE,PSETID_Meeting,CAL_JAPAN,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(LID_CALENDAR_TYPE,PSETID_Meeting,CAL_TAIWAN,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(LID_CALENDAR_TYPE,PSETID_Meeting,CAL_KOREA,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(LID_CALENDAR_TYPE,PSETID_Meeting,CAL_HIJRI,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(LID_CALENDAR_TYPE,PSETID_Meeting,CAL_THAI,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(LID_CALENDAR_TYPE,PSETID_Meeting,CAL_HEBREW,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(LID_CALENDAR_TYPE,PSETID_Meeting,CAL_GREGORIAN_ME_FRENCH,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(LID_CALENDAR_TYPE,PSETID_Meeting,CAL_GREGORIAN_ARABIC,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(LID_CALENDAR_TYPE,PSETID_Meeting,CAL_GREGORIAN_XLIT_ENGLISH,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(LID_CALENDAR_TYPE,PSETID_Meeting,CAL_GREGORIAN_XLIT_FRENCH,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(LID_CALENDAR_TYPE,PSETID_Meeting,CAL_JAPAN_LUNAR,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(LID_CALENDAR_TYPE,PSETID_Meeting,CAL_CHINESE_LUNAR,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(LID_CALENDAR_TYPE,PSETID_Meeting,CAL_SAKA,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(LID_CALENDAR_TYPE,PSETID_Meeting,CAL_LUNAR_KOREAN,flagVALUE)

	NAMEDPROP_FLAG_ENTRY(dispidFileUnderId,PSETID_Address,FILEUNDERID_NONE,flagVALUE) // NULL Value
	NAMEDPROP_FLAG_ENTRY(dispidFileUnderId,PSETID_Address,FILEUNDERID_CUSTOM,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidFileUnderId,PSETID_Address,FILEUNDERID_CALLINIT,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidFileUnderId,PSETID_Address,FILEUNDERID_CALCULATE,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidFileUnderId,PSETID_Address,PROP_ID(PR_DISPLAY_NAME),flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidFileUnderId,PSETID_Address,PROP_ID(PR_GIVEN_NAME),flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidFileUnderId,PSETID_Address,PROP_ID(PR_SURNAME),flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidFileUnderId,PSETID_Address,dispidLastNameAndFirstName,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidFileUnderId,PSETID_Address,dispidCompanyAndFullName,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidFileUnderId,PSETID_Address,dispidFullNameAndCompany,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidFileUnderId,PSETID_Address,dispidLastFirstNoSpace,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidFileUnderId,PSETID_Address,dispidLastFirstSpaceOnly,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidFileUnderId,PSETID_Address,dispidCompanyLastFirstNoSpace,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidFileUnderId,PSETID_Address,dispidCompanyLastFirstSpaceOnly,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidFileUnderId,PSETID_Address,dispidLastFirstNoSpaceCompany,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidFileUnderId,PSETID_Address,dispidLastFirstSpaceOnlyCompany,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidFileUnderId,PSETID_Address,dispidLastFirstAndSuffix,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidFileUnderId,PSETID_Address,dispidFirstMiddleLastSuffix,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidFileUnderId,PSETID_Address,dispidLastFirstNoSpaceAndSuffix,flagVALUE)

	NAMEDPROP_FLAG_ENTRY(dispidPostalAddressId,PSETID_Address,ADDRESS_NONE,flagVALUE) // NULL Value
	NAMEDPROP_FLAG_ENTRY(dispidPostalAddressId,PSETID_Address,ADDRESS_HOME,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidPostalAddressId,PSETID_Address,ADDRESS_WORK,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidPostalAddressId,PSETID_Address,ADDRESS_OTHER,flagVALUE)

	NAMEDPROP_FLAG_ENTRY(dispidTaskMode,PSETID_Common,tdmtNothing,flagVALUE) // NULL Value
	NAMEDPROP_FLAG_ENTRY(dispidTaskMode,PSETID_Common,tdmtTaskReq,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidTaskMode,PSETID_Common,tdmtTaskAcc,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidTaskMode,PSETID_Common,tdmtTaskDec,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidTaskMode,PSETID_Common,tdmtTaskUpd,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidTaskMode,PSETID_Common,tdmtTaskSELF,flagVALUE)

	NAMEDPROP_FLAG_ENTRY(dispidTaskStatus,PSETID_Task,tsvNotStarted,flagVALUE) // NULL Value
	NAMEDPROP_FLAG_ENTRY(dispidTaskStatus,PSETID_Task,tsvInProgress,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidTaskStatus,PSETID_Task,tsvComplete,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidTaskStatus,PSETID_Task,tsvWaiting,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidTaskStatus,PSETID_Task,tsvDeferred,flagVALUE)

	NAMEDPROP_FLAG_ENTRY(dispidTaskState,PSETID_Task,tdsNOM,flagVALUE) // NULL Value
	NAMEDPROP_FLAG_ENTRY(dispidTaskState,PSETID_Task,tdsOWNNEW,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidTaskState,PSETID_Task,tdsOWN,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidTaskState,PSETID_Task,tdsACC,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidTaskState,PSETID_Task,tdsDEC,flagVALUE)

	NAMEDPROP_FLAG_ENTRY(dispidTaskHistory,PSETID_Task,thNone,flagVALUE) // NULL Value
	NAMEDPROP_FLAG_ENTRY(dispidTaskHistory,PSETID_Task,thAccepted,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidTaskHistory,PSETID_Task,thDeclined,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidTaskHistory,PSETID_Task,thUpdated,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidTaskHistory,PSETID_Task,thDueDateChanged,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidTaskHistory,PSETID_Task,thAssigned,flagVALUE)

	NAMEDPROP_FLAG_ENTRY(dispidTaskMultRecips,PSETID_Task,tmrNone,flagVALUE) // NULL Value
	NAMEDPROP_FLAG_ENTRY(dispidTaskMultRecips,PSETID_Task,tmrSent,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidTaskMultRecips,PSETID_Task,tmrRcvd,flagFLAG)
	NAMEDPROP_FLAG_ENTRY(dispidTaskMultRecips,PSETID_Task,tmrTeamTask,flagFLAG)

	NAMEDPROP_FLAG_ENTRY(dispidTaskOwnership,PSETID_Task,tovNew,flagVALUE) // NULL Value
	NAMEDPROP_FLAG_ENTRY(dispidTaskOwnership,PSETID_Task,tovDeleg,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidTaskOwnership,PSETID_Task,tovMe,flagVALUE)

	NAMEDPROP_FLAG_ENTRY(dispidTaskDelegValue,PSETID_Task,tdvNone,flagVALUE) // NULL Value
	NAMEDPROP_FLAG_ENTRY(dispidTaskDelegValue,PSETID_Task,tdvUnknown,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidTaskDelegValue,PSETID_Task,tdvAccepted,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidTaskDelegValue,PSETID_Task,tdvDeclined,flagVALUE)

	NAMEDPROP_FLAG_ENTRY(dispidLogFlags,PSETID_Log,lfContactLog,flagFLAG)

	NAMEDPROP_FLAG_ENTRY(dispidSniffState,PSETID_Common,ssNone,flagVALUE) // NULL Value
	NAMEDPROP_FLAG_ENTRY(dispidSniffState,PSETID_Common,ssOnSniff,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidSniffState,PSETID_Common,ssOnOpen,flagVALUE)

	NAMEDPROP_FLAG_ENTRY(dispidNoteColor,PSETID_Note,ncBlue,flagVALUE) // NULL Value
	NAMEDPROP_FLAG_ENTRY(dispidNoteColor,PSETID_Note,ncGreen,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidNoteColor,PSETID_Note,ncPink,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidNoteColor,PSETID_Note,ncYellow,flagVALUE)
	NAMEDPROP_FLAG_ENTRY(dispidNoteColor,PSETID_Note,ncWhite,flagVALUE)

	{PROP_TAG((guidPSETID_Common),dispidFlagStringEnum),0x00000001,flagVALUE,L"Call"}, // STRING_OK
	{PROP_TAG((guidPSETID_Common),dispidFlagStringEnum),0x00000002,flagVALUE,L"Do Not Forward"}, // STRING_OK
	{PROP_TAG((guidPSETID_Common),dispidFlagStringEnum),0x00000003,flagVALUE,L"Follow Up"}, // STRING_OK
	{PROP_TAG((guidPSETID_Common),dispidFlagStringEnum),0x00000004,flagVALUE,L"For Your Information"}, // STRING_OK
	{PROP_TAG((guidPSETID_Common),dispidFlagStringEnum),0x00000005,flagVALUE,L"Forward"}, // STRING_OK
	{PROP_TAG((guidPSETID_Common),dispidFlagStringEnum),0x00000006,flagVALUE,L"No Response Necessary"}, // STRING_OK
	{PROP_TAG((guidPSETID_Common),dispidFlagStringEnum),0x00000007,flagVALUE,L"Read"}, // STRING_OK
	{PROP_TAG((guidPSETID_Common),dispidFlagStringEnum),0x00000008,flagVALUE,L"Reply"}, // STRING_OK
	{PROP_TAG((guidPSETID_Common),dispidFlagStringEnum),0x00000009,flagVALUE,L"Reply To All"}, // STRING_OK
	{PROP_TAG((guidPSETID_Common),dispidFlagStringEnum),0x0000000A,flagVALUE,L"Review"}, // STRING_OK
	{PROP_TAG((guidPSETID_Common),dispidFlagStringEnum),0x0000006E,flagVALUE,L"Follow Up"}, // STRING_OK
	{PROP_TAG((guidPSETID_Common),dispidFlagStringEnum),0x00000065,flagVALUE,L"Call"}, // STRING_OK
	{PROP_TAG((guidPSETID_Common),dispidFlagStringEnum),0x00000070,flagVALUE,L"Arrange Meeting"}, // STRING_OK
	{PROP_TAG((guidPSETID_Common),dispidFlagStringEnum),0x00000071,flagVALUE,L"Send E-mail"}, // STRING_OK
	{PROP_TAG((guidPSETID_Common),dispidFlagStringEnum),0x00000072,flagVALUE,L"Send Letter"}, // STRING_OK

	NON_PROP_FLAG_ENTRY(flagSearchFlag,STOP_SEARCH,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagSearchFlag,RESTART_SEARCH,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagSearchFlag,RECURSIVE_SEARCH,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagSearchFlag,SHALLOW_SEARCH,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagSearchFlag,FOREGROUND_SEARCH,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagSearchFlag,BACKGROUND_SEARCH,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagSearchFlag,CONTENT_INDEXED_SEARCH,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagSearchFlag,NON_CONTENT_INDEXED_SEARCH,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagSearchFlag,STATIC_SEARCH,flagFLAG)

	NON_PROP_FLAG_ENTRY(flagSearchState,SEARCH_RUNNING,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagSearchState,SEARCH_REBUILD,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagSearchState,SEARCH_RECURSIVE,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagSearchState,SEARCH_FOREGROUND,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagSearchState,SEARCH_STATIC,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagSearchState,SEARCH_MAYBE_STATIC,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagSearchState,MAPI_UNICODE,flagFLAG)

	NON_PROP_FLAG_ENTRY(flagTableStatus,TBLSTAT_COMPLETE,flagVALUE)//NULL Value
	NON_PROP_FLAG_ENTRY(flagTableStatus,TBLSTAT_QCHANGED,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagTableStatus,TBLSTAT_SORTING,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagTableStatus,TBLSTAT_SORT_ERROR,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagTableStatus,TBLSTAT_SETTING_COLS,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagTableStatus,TBLSTAT_SETCOL_ERROR,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagTableStatus,TBLSTAT_RESTRICTING,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagTableStatus,TBLSTAT_RESTRICT_ERROR,flagVALUE)

	NON_PROP_FLAG_ENTRY(flagTableType,TBLTYPE_SNAPSHOT,flagVALUE)//NULL Value
	NON_PROP_FLAG_ENTRY(flagTableType,TBLTYPE_KEYSET,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagTableType,TBLTYPE_DYNAMIC,flagVALUE)

	NON_PROP_FLAG_ENTRY(flagSecurityVersion,SECURITY_DESCRIPTOR_TRANSFER_VERSION,flagVALUE)

	NON_PROP_FLAG_ENTRY(flagSecurityInfo,OWNER_SECURITY_INFORMATION,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagSecurityInfo,GROUP_SECURITY_INFORMATION,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagSecurityInfo,DACL_SECURITY_INFORMATION,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagSecurityInfo,SACL_SECURITY_INFORMATION,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagSecurityInfo,PROTECTED_DACL_SECURITY_INFORMATION,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagSecurityInfo,PROTECTED_SACL_SECURITY_INFORMATION,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagSecurityInfo,UNPROTECTED_DACL_SECURITY_INFORMATION,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagSecurityInfo,UNPROTECTED_SACL_SECURITY_INFORMATION,flagFLAG)

	NON_PROP_FLAG_ENTRY(flagACEFlag,OBJECT_INHERIT_ACE,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEFlag,CONTAINER_INHERIT_ACE,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEFlag,NO_PROPAGATE_INHERIT_ACE,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEFlag,INHERIT_ONLY_ACE,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEFlag,INHERITED_ACE,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEFlag,SUCCESSFUL_ACCESS_ACE_FLAG,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEFlag,FAILED_ACCESS_ACE_FLAG,flagFLAG)

	NON_PROP_FLAG_ENTRY(flagACEType,ACCESS_ALLOWED_ACE_TYPE,flagVALUE)//NULL Value
	NON_PROP_FLAG_ENTRY(flagACEType,ACCESS_DENIED_ACE_TYPE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagACEType,SYSTEM_AUDIT_ACE_TYPE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagACEType,SYSTEM_ALARM_ACE_TYPE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagACEType,ACCESS_ALLOWED_COMPOUND_ACE_TYPE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagACEType,ACCESS_ALLOWED_OBJECT_ACE_TYPE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagACEType,ACCESS_DENIED_OBJECT_ACE_TYPE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagACEType,SYSTEM_AUDIT_OBJECT_ACE_TYPE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagACEType,SYSTEM_ALARM_OBJECT_ACE_TYPE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagACEType,ACCESS_ALLOWED_CALLBACK_ACE_TYPE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagACEType,ACCESS_DENIED_CALLBACK_ACE_TYPE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagACEType,ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagACEType,ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagACEType,SYSTEM_AUDIT_CALLBACK_ACE_TYPE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagACEType,SYSTEM_ALARM_CALLBACK_ACE_TYPE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagACEType,SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagACEType,SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE,flagVALUE)

	NON_PROP_FLAG_ENTRY(flagACEMaskContainer,fsdrightListContents,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskContainer,fsdrightCreateItem,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskContainer,fsdrightCreateContainer,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskContainer,fsdrightReadProperty,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskContainer,fsdrightWriteProperty,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskContainer,fsdrightExecute,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskContainer,fsdrightReserved1,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskContainer,fsdrightReadAttributes,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskContainer,fsdrightWriteAttributes,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskContainer,fsdrightViewItem,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskContainer,fsdrightOwner,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskContainer,fsdrightContact,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskContainer,fsdrightWriteSD,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskContainer,fsdrightDelete,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskContainer,fsdrightWriteOwner,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskContainer,fsdrightReadControl,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskContainer,fsdrightSynchronize,flagFLAG)

	NON_PROP_FLAG_ENTRY(flagACEMaskFreeBusy,fsdrightFreeBusySimple,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskFreeBusy,fsdrightFreeBusyDetailed,flagFLAG)

	NON_PROP_FLAG_ENTRY(flagACEMaskNonContainer,fsdrightReadBody,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskNonContainer,fsdrightWriteBody,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskNonContainer,fsdrightAppendMsg,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskNonContainer,fsdrightReadProperty,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskNonContainer,fsdrightWriteProperty,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskNonContainer,fsdrightExecute,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskNonContainer,fsdrightReadAttributes,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskNonContainer,fsdrightWriteAttributes,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskNonContainer,fsdrightWriteOwnProperty,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskNonContainer,fsdrightDeleteOwnItem,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskNonContainer,fsdrightViewItem,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskNonContainer,fsdrightWriteSD,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskNonContainer,fsdrightDelete,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskNonContainer,fsdrightWriteOwner,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskNonContainer,fsdrightReadControl,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagACEMaskNonContainer,fsdrightSynchronize,flagFLAG)

	NON_PROP_FLAG_ENTRY(flagStreamFlag,MAPI_NATIVE_BODY_TYPE_RTF,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagStreamFlag,MAPI_NATIVE_BODY_TYPE_HTML,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagStreamFlag,MAPI_NATIVE_BODY_TYPE_PLAINTEXT,flagFLAG)

	NON_PROP_FLAG_ENTRY(flagRestrictionType,RES_AND,flagVALUE)//NULL Value
	NON_PROP_FLAG_ENTRY(flagRestrictionType,RES_OR,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagRestrictionType,RES_NOT,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagRestrictionType,RES_CONTENT,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagRestrictionType,RES_PROPERTY,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagRestrictionType,RES_COMPAREPROPS,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagRestrictionType,RES_BITMASK,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagRestrictionType,RES_SIZE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagRestrictionType,RES_EXIST,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagRestrictionType,RES_SUBRESTRICTION,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagRestrictionType,RES_COMMENT,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagRestrictionType,RES_COUNT,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagRestrictionType,RES_ANNOTATION,flagVALUE)

	NON_PROP_FLAG_ENTRY(flagBitmask,BMR_EQZ,flagVALUE)//NULL Value
	NON_PROP_FLAG_ENTRY(flagBitmask,BMR_NEZ,flagVALUE)

	NON_PROP_FLAG_ENTRY(flagRelop,RELOP_LT,flagVALUE)//NULL Value
	NON_PROP_FLAG_ENTRY(flagRelop,RELOP_LE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagRelop,RELOP_GT,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagRelop,RELOP_GE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagRelop,RELOP_EQ,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagRelop,RELOP_NE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagRelop,RELOP_RE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagRelop,RELOP_MEMBER_OF_DL,flagVALUE)

	NON_PROP_FLAG_ENTRY(flagAccountType,OP_MOVE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagAccountType,OP_COPY,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagAccountType,OP_REPLY,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagAccountType,OP_OOF_REPLY,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagAccountType,OP_DEFER_ACTION,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagAccountType,OP_BOUNCE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagAccountType,OP_FORWARD,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagAccountType,OP_DELEGATE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagAccountType,OP_TAG,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagAccountType,OP_DELETE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagAccountType,OP_MARK_AS_READ,flagVALUE)

	NON_PROP_FLAG_ENTRY(flagBounceCode,BOUNCE_MESSAGE_SIZE_TOO_LARGE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagBounceCode,BOUNCE_FORMS_MISMATCH,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagBounceCode,BOUNCE_ACCESS_DENIED,flagVALUE)

	NON_PROP_FLAG_ENTRY(flagOPReply,DO_NOT_SEND_TO_ORIGINATOR,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagOPReply,STOCK_REPLY_TEMPLATE,flagFLAG)

	NON_PROP_FLAG_ENTRY(flagOpForward,FWD_PRESERVE_SENDER,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagOpForward,FWD_DO_NOT_MUNGE_MSG,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagOpForward,FWD_AS_ATTACHMENT,flagFLAG)

	NON_PROP_FLAG_ENTRY(flagFuzzyLevel,FL_IGNORECASE,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagFuzzyLevel,FL_IGNORENONSPACE,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagFuzzyLevel,FL_LOOSE,flagFLAG)
	//This entry clears any high level bits so we can look at the low order as a value
	NON_PROP_CLEAR_BITS_ENTRY(flagFuzzyLevel,0xffffff00)
	NON_PROP_FLAG_ENTRY(flagFuzzyLevel,FL_FULLSTRING,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagFuzzyLevel,FL_SUBSTRING,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagFuzzyLevel,FL_PREFIX,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagFuzzyLevel,FL_PREFIX_ON_ANY_WORD,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagFuzzyLevel,FL_PHRASE_MATCH,flagVALUE)

	NON_PROP_FLAG_ENTRY(flagRulesVersion,EDK_RULES_VERSION,flagVALUE)

	NON_PROP_FLAG_ENTRY(flagNotifEventType,fnevCriticalError,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagNotifEventType,fnevNewMail,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagNotifEventType,fnevObjectCreated,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagNotifEventType,fnevObjectDeleted,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagNotifEventType,fnevObjectModified,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagNotifEventType,fnevObjectMoved,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagNotifEventType,fnevObjectCopied,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagNotifEventType,fnevSearchComplete,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagNotifEventType,fnevTableModified,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagNotifEventType,fnevStatusObjectModified,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagNotifEventType,fnevIndexing,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagNotifEventType,fnevReservedForMapi,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagNotifEventType,fnevExtended,flagFLAG)

	NON_PROP_FLAG_ENTRY(flagTableEventType,TABLE_CHANGED,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagTableEventType,TABLE_ERROR,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagTableEventType,TABLE_ROW_ADDED,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagTableEventType,TABLE_ROW_DELETED,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagTableEventType,TABLE_ROW_MODIFIED,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagTableEventType,TABLE_SORT_DONE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagTableEventType,TABLE_RESTRICT_DONE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagTableEventType,TABLE_SETCOL_DONE,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagTableEventType,TABLE_RELOAD,flagVALUE)

	NON_PROP_FLAG_ENTRY(flagTZDef,TZDEFINITION_FLAG_VALID_GUID,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagTZDef,TZDEFINITION_FLAG_VALID_KEYNAME,flagVALUE)

	NON_PROP_FLAG_ENTRY(flagTZRule,TZRULE_FLAG_RECUR_CURRENT_TZREG,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagTZRule,TZRULE_FLAG_EFFECTIVE_TZREG,flagVALUE)

	NON_PROP_FLAG_ENTRY(flagExtendedFolderFlag,XEFF_NORMAL,flagVALUE) // NULL Value
	NON_PROP_FLAG_ENTRY(flagExtendedFolderFlag,XEFF_SHOW_UNREAD_COUNT,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagExtendedFolderFlag,XEFF_SHOW_CONTENT_COUNT,flagFLAG)
	NON_PROP_FLAG_ENTRY(flagExtendedFolderFlag,XEFF_SHOW_NO_POLICY,flagFLAG)

	NON_PROP_FLAG_ENTRY(flagExtendedFolderFlagType,EFPB_FLAGS,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagExtendedFolderFlagType,EFPB_CLSIDID,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagExtendedFolderFlagType,EFPB_SFTAG,flagVALUE)
	NON_PROP_FLAG_ENTRY(flagExtendedFolderFlagType,EFPB_TODO_VERSION,flagVALUE)
};