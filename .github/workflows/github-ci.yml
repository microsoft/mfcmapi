# Continuous integration
name: github-continuous-integration
#run-name: $(Year:yy).2.$(date:yy)$(DayOfYear)$(rev:.rr)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [ 'Release', 'Debug', 'Release Unicode', 'Debug Unicode' ]
        platform: [ 'Win32', 'x64' ]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    
    - name: "Debug Output"
      shell: pwsh
      run: |
        gci env:
        gci | ft
        tree /A

    - name: Get current date
      id: date
      run: |
        echo "{date}={$(date +'%Y-%m-%d')}" >> $GITHUB_STATE

    - name: Test with environment variables
      run: echo $TAG_NAME - $RELEASE_NAME
      env:
        TAG_NAME: nightly-tag-${{ env.date }}
        RELEASE_NAME: nightly-release-${{ env.date }}
   
    - name: 'Add Version'
      shell: pwsh
      run: |
        # run-name: $(Year:yy).2.$(date:yy)$(DayOfYear)$(rev:.rr)
        gci env:date
        $Env:BUILD_BUILDNUMBER -match "(\d+)\.(\d+)\.(\d+)\.(\d+)"
        $m = $matches
        $file = gci "$Env:GITHUB_WORKSPACE \core\res\bldver.rc"
        if($file)
        {
          attrib $file -r
          $fc = Get-Content($file)
          $fc = $fc -replace "#define rmj (\d+)", ("#define rmj "+$m[1])
          $fc = $fc -replace "#define rmm (\d+)", ("#define rmm "+$m[2])
          $fc = $fc -replace "#define rup (\d+)", ("#define rup "+$m[3])
          $fc = $fc -replace "#define rmn (\d+)", ("#define rmn "+$m[4])
          $fc | Out-File $file
        }

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.GITHUB_WORKSPACE}}\mfcmapi.sln

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{matrix.configuration}} /p:Platform=${{matrix.platform}}
