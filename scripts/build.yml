# Common build script
parameters:
- name: name
  type: string
- name: platform
  type: string
- name: configuration
  type: string

jobs:
- job: ${{ parameters.name }}
  steps:
  - checkout: self
    clean: true
    submodules: recursive
  - powershell: |
      gci env:BUILD_BUILDNUMBER
      $Env:BUILD_BUILDNUMBER -match "(\d+)\.(\d+)\.(\d+)\.(\d+)"
      $m = $matches
      $file = gci "$Env:BUILD_SOURCESDIRECTORY\core\res\bldver.rc"
      if($file)
      {
      attrib $file -r
      $fc = Get-Content($file)
      $fc = $fc -replace "#define rmj (\d+)", ("#define rmj "+$m[1])
      $fc = $fc -replace "#define rmm (\d+)", ("#define rmm "+$m[2])
      $fc = $fc -replace "#define rup (\d+)", ("#define rup "+$m[3])
      $fc = $fc -replace "#define rmn (\d+)", ("#define rmn "+$m[4])
      $fc | Out-File $file
      }
    displayName: 'Add Version'

  - task: CredScan@3
    displayName: Run CredScan
    inputs:
      outputFormat: pre
      verboseOutput: true
      debugMode: false
      folderSuppression: false

  - task: PoliCheck@2
    displayName: Run PoliCheck
    inputs:
      targetType: F
      result: PoliCheck.xml

  - task: AntiMalware@4
    displayName: Run MpCmdRun.exe
    inputs:
      FileDirPath: $(Build.SourcesDirectory)
      EnableServices: true
      InitialWaitIntervalInSecondsForSignatureUpdateRetry: 30
    retryCountOnTaskFailure: 1
    
  - task: VSBuild@1
    displayName: Build
    inputs:
      solution: '**/*.sln'
      vsVersion: latest
      msbuildArgs: '/p:SourceLinkCreate=true'
      platform: ${{ parameters.platform }}
      configuration: ${{ parameters.configuration }}
      clean: true
      maximumCpuCount: true
      msbuildArchitecture: x64
      createLogFile: true

  - task: VSTest@2
    displayName: 'VsTest - UnitTests'
    inputs:
      runInParallel: true
      codeCoverageEnabled: true
      diagnosticsEnabled: True

  # This might consume azure artifact space which is super limited
  # We'll keep symbols over in the github release instead
  # - task: PublishSymbols@2
  #   displayName: 'Publish symbols path'
  #   inputs:
  #     IndexSources: false
  #     SymbolServerType: TeamServices
  #     DetailedLog: true

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)\bin'
      Contents: |
        **\mfcmapi.exe
        **\mfcmapi.pdb
        **\mrmapi.exe
        **\mrmapi.pdb
      TargetFolder: '$(build.artifactstagingdirectory)'
      CleanTargetFolder: true
      OverWrite: true

  - task: RoslynAnalyzers@3
    displayName: Run Roslyn Analyzers
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    inputs:
      userProvideBuildInfo: auto
      msBuildArchitecture: x64
  
  - task: BinSkim@4
    displayName: Run BinSkim Assemblies
    continueOnError: True
    inputs:
      AnalyzeTargetGlob: $(build.artifactstagingdirectory).exe
      AnalyzeSymPath: $(build.artifactstagingdirectory))\**.pdb
      AnalyzeRecurse: true
      AnalyzeVerbose: true

  - task: SdtReport@2
    displayName: Create Security Analysis Report
    continueOnError: true
    inputs:
      GdnExportTsvFile: true
      GdnExportHtmlFile: true

  - task: PublishSecurityAnalysisLogs@3
    displayName: Publish Security Analysis Logs
    inputs:
      ArtifactName: CodeAnalysisLogs
          
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
