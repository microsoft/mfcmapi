# Common build script
parameters:
- name: name
  type: string
- name: sign
  type: boolean
  default: false
- name: title
  type: string
- name: description
  type: string
  default: ""
- name: prerelease
  type: boolean
  default: true

jobs:
- job: ${{ parameters.name }}
  steps:
  - checkout: self
    clean: true
    submodules: recursive

  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      downloadType: 'single'
      artifactName: 'drop'
      downloadPath: '$(System.ArtifactsDirectory)'

  - task: UseDotNet@2
    displayName: 'Install .NetCore 2.x'
    inputs:
      version: '2.x'

  - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
    condition: ${{ parameters.sign }}
    displayName: 'ESRP CodeSigning'
    inputs:
      ConnectedServiceName: 'ESRP CodeSigning Service connection'
      FolderPath: '$(System.ArtifactsDirectory)/drop'
      Pattern: '*.exe'
      signConfigType: inlineSignParams
      inlineOperation: |
        [
                {
                    "KeyCode" : "CP-230012",
                    "OperationCode" : "SigntoolSign",
                    "Parameters" : {
                        "OpusName" : "Microsoft",
                        "OpusInfo" : "http://www.microsoft.com",
                        "FileDigest" : "/fd \"SHA256\"",
                        "PageHash" : "/NPH",
                        "TimeStamp" : "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                    },
                    "ToolName" : "sign",
                    "ToolVersion" : "1.0"
                },
                {
                    "KeyCode" : "CP-230012",
                    "OperationCode" : "SigntoolVerify",
                    "Parameters" : {},
                    "ToolName" : "sign",
                    "ToolVersion" : "1.0"
                }
            ]

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(System.ArtifactsDirectory)/drop/Win32/MrMAPI/Release_Unicode/MrMAPI.exe'
      archiveFile: '$(Build.ArtifactStagingDirectory)/MrMAPI.exe.$(Build.BuildNumber).zip'
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(System.ArtifactsDirectory)/drop/Win32/MrMAPI/Release_Unicode/MrMAPI.pdb'
      archiveFile: '$(Build.ArtifactStagingDirectory)/MrMAPI.pdb.$(Build.BuildNumber).zip'
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(System.ArtifactsDirectory)/drop/x64/MrMAPI/Release_Unicode/MrMAPI.exe'
      archiveFile: '$(Build.ArtifactStagingDirectory)/MrMAPI.x64.exe.$(Build.BuildNumber).zip'
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(System.ArtifactsDirectory)/drop/x64/MrMAPI/Release_Unicode/MrMAPI.pdb'
      archiveFile: '$(Build.ArtifactStagingDirectory)/MrMAPI.x64.pdb.$(Build.BuildNumber).zip'
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(System.ArtifactsDirectory)/drop/Win32/Release_Unicode/MFCMapi.exe'
      archiveFile: '$(Build.ArtifactStagingDirectory)/MFCMAPI.exe.$(Build.BuildNumber).zip'
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(System.ArtifactsDirectory)/drop/Win32/Release_Unicode/MFCMapi.pdb'
      archiveFile: '$(Build.ArtifactStagingDirectory)/MFCMAPI.pdb.$(Build.BuildNumber).zip'
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(System.ArtifactsDirectory)/drop/x64/Release_Unicode/MFCMapi.exe'
      archiveFile: '$(Build.ArtifactStagingDirectory)/MFCMAPI.x64.exe.$(Build.BuildNumber).zip'
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(System.ArtifactsDirectory)/drop/x64/Release_Unicode/MFCMapi.pdb'
      archiveFile: '$(Build.ArtifactStagingDirectory)/MFCMAPI.x64.pdb.$(Build.BuildNumber).zip'

  - task: GitHubRelease@1
    inputs:
      gitHubConnection: 'Github MFCMAPI'
      repositoryName: '$(Build.Repository.Name)'
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'userSpecifiedTag'
      tag: '$(Build.BuildNumber)'
      title: ${{ parameters.title }} ($(Build.BuildNumber))
      releaseNotesSource: 'inline'
      releaseNotesInline: |-
        Build: *$(Build.BuildNumber)*

        ${{ parameters.description }}
        If you just want to run MFCMAPI or MrMAPI, get the executables (exe). If you want to debug them, get the symbol files (pdb).

        *The 64 bit builds will only work on a machine with 64 bit Outlook installed. All other machines should use the 32 bit builds, regardless of the operating system.*

        [![Facebook Badge](http://badge.facebook.com/badge/26764016480.2776.1538253884.png)](http://www.facebook.com/MFCMAPI)
        [Download stats](https://hanadigital.github.io/grev/?user=stephenegriffin&repo=mfcmapi)
      isDraft: true
      isPreRelease: ${{ parameters.prerelease }}
      changeLogCompareToRelease: 'lastFullRelease'
      changeLogType: 'issueBased'
      assets: |
        $(Build.ArtifactStagingDirectory)/*.zip
